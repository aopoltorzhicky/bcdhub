definitions:
  ast.JSONModel:
    additionalProperties: true
    type: object
  ast.JSONSchema:
    properties:
      const:
        type: string
      default: {}
      format:
        type: string
      items:
        $ref: '#/definitions/ast.JSONSchema'
      maxLength:
        type: integer
      minLength:
        type: integer
      oneOf:
        items:
          $ref: '#/definitions/ast.JSONSchema'
        type: array
      prim:
        type: string
      properties:
        additionalProperties:
          $ref: '#/definitions/ast.JSONSchema'
        type: object
      required:
        items:
          type: string
        type: array
      schemaKey:
        $ref: '#/definitions/ast.JSONSchema'
      tag:
        type: string
      title:
        type: string
      type:
        type: string
      x-itemTitle:
        type: string
      x-options:
        additionalProperties: true
        type: object
    type: object
  ast.MiguelNode:
    properties:
      children:
        items:
          $ref: '#/definitions/ast.MiguelNode'
        type: array
      diff_type:
        type: string
      from: {}
      name:
        type: string
      prim:
        type: string
      type:
        type: string
      value: {}
    type: object
  ast.Typedef:
    properties:
      args:
        items:
          $ref: '#/definitions/ast.TypedefArg'
        type: array
      name:
        type: string
      type:
        type: string
      typedef:
        items:
          $ref: '#/definitions/ast.Typedef'
        type: array
    type: object
  ast.TypedefArg:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  contract.ListGlobalConstantItem:
    properties:
      address:
        type: string
      level:
        type: integer
      links_count:
        type: integer
      timestamp:
        type: string
    type: object
  contract.Sections:
    properties:
      code:
        items:
          type: integer
        type: array
      parameter:
        items:
          type: integer
        type: array
      returnType:
        items:
          type: integer
        type: array
    type: object
  contract.ViewImplementation:
    properties:
      michelsonStorageView:
        $ref: '#/definitions/contract.Sections'
    type: object
  gin.H:
    additionalProperties: true
    type: object
  handlers.AccountInfo:
    properties:
      address:
        type: string
      alias:
        type: string
        x-nullable: true
      balance:
        type: integer
      last_action:
        type: string
      network:
        type: string
      tx_count:
        type: integer
    type: object
  handlers.BigMapDiffByKeyResponse:
    properties:
      key:
        x-nullable: true
      key_hash:
        type: string
      total:
        type: integer
      values:
        items:
          $ref: '#/definitions/handlers.BigMapDiffItem'
        type: array
        x-nullable: true
    type: object
  handlers.BigMapDiffItem:
    properties:
      level:
        type: integer
      timestamp:
        type: string
      value: {}
    type: object
  handlers.BigMapHistoryItem:
    properties:
      action:
        type: string
      destination_ptr:
        type: integer
        x-nullable: true
      source_ptr:
        type: integer
        x-nullable: true
      timestamp:
        type: string
    type: object
  handlers.BigMapHistoryResponse:
    properties:
      address:
        type: string
      items:
        items:
          $ref: '#/definitions/handlers.BigMapHistoryItem'
        type: array
        x-nullable: true
      network:
        type: string
      ptr:
        type: integer
    type: object
  handlers.BigMapItem:
    properties:
      is_active:
        type: boolean
      key: {}
      key_hash:
        type: string
      key_string:
        type: string
      level:
        type: integer
      timestamp:
        type: string
    type: object
  handlers.BigMapResponseItem:
    properties:
      count:
        type: integer
      data:
        $ref: '#/definitions/handlers.BigMapItem'
    type: object
  handlers.Block:
    properties:
      chain_id:
        example: NetXdQprcVkpaWU
        type: string
      cost_per_byte:
        example: 250
        type: integer
      hard_gas_limit_per_operation:
        example: 1040000
        type: integer
      hard_storage_limit_per_operation:
        example: 60000
        type: integer
      hash:
        example: BLyAEwaXShJuZasvUezHUfLqzZ48V8XrPvXF2wRaH15tmzEpsHT
        type: string
      level:
        example: 100
        type: integer
      network:
        example: mainnet
        type: string
      predecessor:
        example: BMWVEwEYw9m5iaHzqxDfkPzZTV4rhkSouRh3DkVMVGkxZ3EVaNs
        type: string
      protocol:
        example: PtCJ7pwoxe8JasnHY8YonnLYjcVHmhiARPJvqcC6VfHT5s8k8sY
        type: string
      time_between_blocks:
        example: 30
        type: integer
      timestamp:
        example: "2018-06-30T18:05:27Z"
        type: string
    type: object
  handlers.Contract:
    properties:
      address:
        type: string
      alias:
        type: string
        x-nullable: true
      annotations:
        items:
          type: string
        type: array
        x-nullable: true
      delegate:
        type: string
        x-nullable: true
      delegate_alias:
        type: string
        x-nullable: true
      entrypoints:
        items:
          type: string
        type: array
        x-nullable: true
      fail_strings:
        items:
          type: string
        type: array
        x-nullable: true
      found_by:
        type: string
        x-nullable: true
      hardcoded:
        items:
          type: string
        type: array
        x-nullable: true
      hash:
        type: string
      id:
        type: integer
      last_action:
        type: string
        x-nullable: true
      level:
        type: integer
      manager:
        type: string
        x-nullable: true
      migrations_count:
        type: integer
        x-nullable: true
      network:
        type: string
      slug:
        type: string
        x-nullable: true
      tags:
        items:
          type: string
        type: array
        x-nullable: true
      timestamp:
        type: string
      tx_count:
        type: integer
        x-nullable: true
    type: object
  handlers.ContractWithStats:
    properties:
      address:
        type: string
      alias:
        type: string
        x-nullable: true
      annotations:
        items:
          type: string
        type: array
        x-nullable: true
      delegate:
        type: string
        x-nullable: true
      delegate_alias:
        type: string
        x-nullable: true
      entrypoints:
        items:
          type: string
        type: array
        x-nullable: true
      fail_strings:
        items:
          type: string
        type: array
        x-nullable: true
      found_by:
        type: string
        x-nullable: true
      hardcoded:
        items:
          type: string
        type: array
        x-nullable: true
      hash:
        type: string
      id:
        type: integer
      last_action:
        type: string
        x-nullable: true
      level:
        type: integer
      manager:
        type: string
        x-nullable: true
      migrations_count:
        type: integer
        x-nullable: true
      network:
        type: string
      same_count:
        type: integer
      slug:
        type: string
        x-nullable: true
      tags:
        items:
          type: string
        type: array
        x-nullable: true
      timestamp:
        type: string
      tx_count:
        type: integer
        x-nullable: true
    type: object
  handlers.CountResponse:
    properties:
      count:
        type: integer
    type: object
  handlers.EntrypointSchema:
    properties:
      default_model:
        $ref: '#/definitions/ast.JSONModel'
        x-nullable: true
      name:
        type: string
      schema:
        $ref: '#/definitions/ast.JSONSchema'
      typedef:
        items:
          $ref: '#/definitions/ast.Typedef'
        type: array
    type: object
  handlers.Error:
    properties:
      message:
        example: text
        type: string
    type: object
  handlers.GetBigMapResponse:
    properties:
      active_keys:
        type: integer
      address:
        type: string
      contract_alias:
        type: string
        x-nullable: true
      network:
        type: string
      ptr:
        type: integer
      total_keys:
        type: integer
      typedef:
        items:
          $ref: '#/definitions/ast.Typedef'
        type: array
        x-nullable: true
    type: object
  handlers.GetErrorLocationResponse:
    properties:
      end_col:
        type: integer
      failed_row:
        type: integer
      first_row:
        type: integer
      start_col:
        type: integer
      text:
        type: string
    type: object
  handlers.GlobalConstant:
    properties:
      address:
        type: string
      code:
        type: string
      level:
        type: integer
      timestamp:
        type: string
      value:
        items:
          type: integer
        type: array
    type: object
  handlers.HeadResponse:
    properties:
      level:
        type: integer
      network:
        type: string
      protocol:
        type: string
      synced:
        type: boolean
      time:
        type: string
    type: object
  handlers.Migration:
    properties:
      hash:
        type: string
        x-nullable: true
      kind:
        type: string
      level:
        type: integer
      prev_protocol:
        type: string
      protocol:
        type: string
      timestamp:
        type: string
    type: object
  handlers.OPGResponse:
    properties:
      content_index:
        type: integer
      counter:
        type: integer
      entrypoint:
        type: string
      flow:
        type: integer
      hash:
        type: string
      internals:
        type: integer
      kind:
        type: string
      last_id:
        type: integer
      level:
        type: integer
      status:
        type: string
      timestamp:
        type: string
      total_cost:
        type: integer
    type: object
  handlers.Operation:
    properties:
      allocated_destination_contract:
        example: true
        type: boolean
        x-nullable: true
      allocated_destination_contract_burned:
        type: integer
        x-nullable: true
      amount:
        type: integer
        x-nullable: true
      balance:
        type: integer
        x-nullable: true
      burned:
        type: integer
        x-nullable: true
      consumed_gas:
        example: 100
        type: integer
        x-nullable: true
      content_index:
        type: integer
      counter:
        type: integer
        x-nullable: true
      delegate:
        type: string
        x-nullable: true
      destination:
        type: string
        x-nullable: true
      destination_alias:
        type: string
        x-nullable: true
      entrypoint:
        type: string
        x-nullable: true
      errors:
        items:
          $ref: '#/definitions/tezerrors.Error'
        type: array
        x-nullable: true
      fee:
        type: integer
        x-nullable: true
      gas_limit:
        type: integer
        x-nullable: true
      hash:
        type: string
        x-nullable: true
      id:
        type: integer
        x-nullable: true
      internal:
        type: boolean
      kind:
        type: string
      level:
        type: integer
        x-nullable: true
      manager_pubkey:
        type: string
        x-nullable: true
      mempool:
        type: boolean
      network:
        type: string
      paid_storage_size_diff:
        example: 300
        type: integer
        x-nullable: true
      parameters:
        x-nullable: true
      protocol:
        type: string
      public_key:
        type: string
        x-nullable: true
      rawMempool:
        x-nullable: true
      source:
        type: string
        x-nullable: true
      source_alias:
        type: string
        x-nullable: true
      status:
        type: string
      storage_diff:
        $ref: '#/definitions/ast.MiguelNode'
        x-nullable: true
      storage_limit:
        type: integer
        x-nullable: true
      storage_size:
        example: 200
        type: integer
        x-nullable: true
      timestamp:
        type: string
    type: object
  handlers.OperationResponse:
    properties:
      last_id:
        example: "1588640276994159"
        type: string
        x-nullable: true
      operations:
        items:
          $ref: '#/definitions/handlers.Operation'
        type: array
    type: object
  handlers.RecentlyCalledContract:
    properties:
      address:
        type: string
      alias:
        type: string
        x-nullable: true
      id:
        type: integer
      last_action:
        type: string
        x-nullable: true
      tx_count:
        type: integer
        x-nullable: true
    type: object
  handlers.SameContractsResponse:
    properties:
      contracts:
        items:
          $ref: '#/definitions/handlers.ContractWithStats'
        type: array
      count:
        type: integer
    type: object
  handlers.ViewSchema:
    properties:
      default_model:
        x-nullable: true
      description:
        type: string
      error:
        type: string
      implementation:
        type: integer
      kind:
        type: string
      name:
        type: string
      schema:
        $ref: '#/definitions/ast.JSONSchema'
      typedef:
        items:
          $ref: '#/definitions/ast.Typedef'
        type: array
    type: object
  handlers.executeViewRequest:
    properties:
      amount:
        type: integer
      data:
        additionalProperties: true
        type: object
      gas_limit:
        type: integer
      implementation:
        type: integer
      kind:
        type: string
      name:
        type: string
      sender:
        type: string
      source:
        type: string
      view:
        $ref: '#/definitions/contract.ViewImplementation'
    required:
    - data
    - kind
    type: object
  handlers.getEntrypointDataRequest:
    properties:
      data:
        additionalProperties: true
        type: object
      format:
        type: string
      name:
        type: string
    required:
    - data
    - name
    type: object
  handlers.runCodeRequest:
    properties:
      amount:
        type: integer
      data:
        additionalProperties: true
        type: object
      gas_limit:
        type: integer
      name:
        type: string
      sender:
        type: string
      source:
        type: string
    required:
    - data
    - name
    type: object
  tezerrors.Error:
    properties:
      IError: {}
      descr:
        type: string
      id:
        type: string
      kind:
        type: string
      title:
        type: string
    type: object
info:
  contact:
    email: hello@baking-bad.org
    name: Baking Bad Team
    url: https://baking-bad.org/docs
  description: This is API description for Better Call Dev service.
  title: Better Call Dev API
  x-logo:
    altText: Better Call Dev logo
    href: https://better-call.dev
    url: https://better-call.dev/img/logo_og.png
paths:
  /v1/account/{network}/{address}:
    get:
      consumes:
      - application/json
      description: Get account info
      operationId: get-account-info
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: Address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.AccountInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get account info
      tags:
      - account
  /v1/bigmap/{network}/{ptr}:
    get:
      consumes:
      - application/json
      description: Get big map info by pointer
      operationId: get-bigmap
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: Big map pointer
        in: path
        name: ptr
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.GetBigMapResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get big map info by pointer
      tags:
      - bigmap
  /v1/bigmap/{network}/{ptr}/count:
    get:
      consumes:
      - application/json
      description: Get big map diffs count info by pointer
      operationId: get-bigmapdiff-count
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: Big map pointer
        in: path
        name: ptr
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get big map diffs count info by pointer
      tags:
      - bigmap
  /v1/bigmap/{network}/{ptr}/history:
    get:
      consumes:
      - application/json
      description: Get big map actions (alloc/copy/remove)
      operationId: get-bigmap-history
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: Big map pointer
        in: path
        name: ptr
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.BigMapHistoryResponse'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get big map actions (alloc/copy/remove)
      tags:
      - bigmap
  /v1/bigmap/{network}/{ptr}/keys:
    get:
      consumes:
      - application/json
      description: Get big map keys by pointer
      operationId: get-bigmap-keys
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: Big map pointer
        in: path
        name: ptr
        required: true
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Requested count
        in: query
        maximum: 10
        name: size
        type: integer
      - description: Max level filter
        in: query
        minimum: 0
        name: max_level
        type: integer
      - description: Min level filter
        in: query
        minimum: 0
        name: min_level
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.BigMapResponseItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get big map keys by pointer
      tags:
      - bigmap
  /v1/bigmap/{network}/{ptr}/keys/{key_hash}:
    get:
      consumes:
      - application/json
      description: Get big map diffs by pointer and key hash
      operationId: get-bigmap-keyhash
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: Big map pointer
        in: path
        name: ptr
        required: true
        type: integer
      - description: Key hash in big map
        in: path
        maxLength: 54
        minLength: 54
        name: key_hash
        required: true
        type: string
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Requested count
        in: query
        maximum: 10
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.BigMapDiffByKeyResponse'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get big map diffs by pointer and key hash
      tags:
      - bigmap
  /v1/bigmap/{network}/{ptr}/keys/{key_hash}/current:
    get:
      consumes:
      - application/json
      description: Get current big map value by pointer and key hash
      operationId: get-bigmap-keyhash-current
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: Big map pointer
        in: path
        name: ptr
        required: true
        type: integer
      - description: Key hash in big map
        in: path
        maxLength: 54
        minLength: 54
        name: key_hash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.BigMapDiffByKeyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get current big map value by pointer and key hash
      tags:
      - bigmap
  /v1/contract/{network}/{address}:
    get:
      consumes:
      - application/json
      description: Get full contract info
      operationId: get-contract
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ContractWithStats'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get contract info
      tags:
      - contract
  /v1/contract/{network}/{address}/code:
    get:
      consumes:
      - application/json
      description: Get contract code
      operationId: get-contract-code
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Protocol
        in: query
        name: protocol
        type: string
      - description: Level
        in: query
        name: level
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get contract code
      tags:
      - contract
  /v1/contract/{network}/{address}/entrypoints:
    get:
      consumes:
      - application/json
      description: Get contract entrypoints
      operationId: get-contract-entrypoints
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.EntrypointSchema'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get contract entrypoints
      tags:
      - contract
  /v1/contract/{network}/{address}/entrypoints/data:
    post:
      consumes:
      - application/json
      description: Get entrypoint data from schema object
      operationId: get-contract-entrypoints-data
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.getEntrypointDataRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get entrypoint data from schema object
      tags:
      - contract
  /v1/contract/{network}/{address}/entrypoints/schema:
    get:
      consumes:
      - application/json
      description: Get contract`s entrypoint schema
      operationId: get-contract-entrypoints-schema
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Entrypoint name
        in: query
        name: entrypoint
        required: true
        type: string
      - description: Fill storage type
        enum:
        - empty
        - latest
        in: query
        name: fill_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.EntrypointSchema'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get contract`s entrypoint schema
      tags:
      - contract
  /v1/contract/{network}/{address}/entrypoints/trace:
    post:
      consumes:
      - application/json
      description: Execute entrypoint with passed arguments
      operationId: run-code
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.runCodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.Operation'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Execute entrypoint with passed arguments
      tags:
      - contract
  /v1/contract/{network}/{address}/global_constants:
    get:
      consumes:
      - application/json
      description: Get global constants used by contract
      operationId: get-contract-global-constants
      parameters:
      - description: network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Constants count
        in: query
        maximum: 10
        name: size
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.GlobalConstant'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get global constants used by contract
      tags:
      - contract
  /v1/contract/{network}/{address}/mempool:
    get:
      consumes:
      - application/json
      description: Get contract mempool operations
      operationId: get-contract-mempool
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.Operation'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get contract mempool operations
      tags:
      - contract
  /v1/contract/{network}/{address}/migrations:
    get:
      consumes:
      - application/json
      description: Get contract migrations
      operationId: get-contract-migrations
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.Migration'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get contract migrations
      tags:
      - contract
  /v1/contract/{network}/{address}/operations:
    get:
      consumes:
      - application/json
      description: Get contract operations
      operationId: get-contract-operations
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Last operation ID
        in: query
        name: last_id
        type: string
      - description: Timestamp
        in: query
        name: from
        type: integer
      - description: Timestamp
        in: query
        name: to
        type: integer
      - description: Expected OPG count
        in: query
        name: size
        type: integer
      - description: Comma-separated operations statuses
        in: query
        name: status
        type: string
      - description: Comma-separated called entrypoints list
        in: query
        name: entrypoints
        type: string
      - description: Include storage diff to operations or not
        in: query
        name: with_storage_diff
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.OperationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get contract operations
      tags:
      - contract
  /v1/contract/{network}/{address}/opg:
    get:
      consumes:
      - application/json
      description: Get operation groups by account
      operationId: get-operation-groups-by-account
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Last operation ID
        in: query
        name: last_id
        type: string
      - description: Expected OPG count
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.OPGResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get operation groups by account
      tags:
      - contract
  /v1/contract/{network}/{address}/same:
    get:
      consumes:
      - application/json
      description: Get same contracts
      operationId: get-contract-same
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Requested count
        in: query
        maximum: 10
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SameContractsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get same contracts
      tags:
      - contract
  /v1/contract/{network}/{address}/storage:
    get:
      consumes:
      - application/json
      description: Get contract storage
      operationId: get-contract-storage
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Level
        in: query
        name: level
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ast.MiguelNode'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get contract storage
      tags:
      - contract
  /v1/contract/{network}/{address}/storage/raw:
    get:
      consumes:
      - application/json
      description: Get contract raw storage
      operationId: get-contract-storage-raw
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Level
        in: query
        name: level
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get contract raw storage
      tags:
      - contract
  /v1/contract/{network}/{address}/storage/rich:
    get:
      consumes:
      - application/json
      description: Get contract rich storage
      operationId: get-contract-storage-rich
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Level
        in: query
        name: level
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get contract rich storage
      tags:
      - contract
  /v1/contract/{network}/{address}/storage/schema:
    get:
      consumes:
      - application/json
      description: Get contract storage schema
      operationId: get-contract-storage-schema
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Fill storage type
        enum:
        - empty
        - current
        - initial
        in: query
        name: fill_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.EntrypointSchema'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get contract storage schema
      tags:
      - contract
  /v1/contract/{network}/{address}/views/execute:
    post:
      consumes:
      - application/json
      description: Execute view of contracts metadata
      operationId: contract-execute-view
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.executeViewRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ast.MiguelNode'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Execute view of contracts metadata
      tags:
      - contract
  /v1/contract/{network}/{address}/views/schema:
    get:
      consumes:
      - application/json
      description: Get view schemas of contract metadata
      operationId: get-contract-tzip-views-schema
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Views kind
        enum:
        - on-chain
        - off-chain
        in: query
        name: kind
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.ViewSchema'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get view schemas of contract metadata
      tags:
      - contract
  /v1/global_constants/{network}:
    get:
      consumes:
      - application/json
      description: List global constants
      operationId: list-global-constants
      parameters:
      - description: network
        in: path
        name: network
        required: true
        type: string
      - description: Constants count
        in: query
        maximum: 10
        name: size
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Order by
        enum:
        - level
        - timestamp
        - links_count
        - address
        in: query
        name: order_by
        type: string
      - description: Sort order
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/contract.ListGlobalConstantItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: List global constants
      tags:
      - global-constants
  /v1/global_constants/{network}/{address}:
    get:
      consumes:
      - application/json
      description: Get global constant
      operationId: get-global-constant
      parameters:
      - description: network
        in: path
        name: network
        required: true
        type: string
      - description: expr address of constant
        in: path
        maxLength: 54
        minLength: 54
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.GlobalConstant'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get global constant
      tags:
      - global-constants
  /v1/global_constants/{network}/{address}/contracts:
    get:
      consumes:
      - application/json
      description: Get contracts that use the global constant
      operationId: get-global-constant-contracts
      parameters:
      - description: network
        in: path
        name: network
        required: true
        type: string
      - description: expr address of constant
        in: path
        maxLength: 54
        minLength: 54
        name: address
        required: true
        type: string
      - description: Constants count
        in: query
        maximum: 10
        name: size
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.Contract'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get contracts that use the global constant
      tags:
      - global-constants
  /v1/head:
    get:
      consumes:
      - application/json
      description: Get indexer head for each network
      operationId: get-indexer-head
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.HeadResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Show indexer head
      tags:
      - head
  /v1/head/{network}:
    get:
      consumes:
      - application/json
      description: Get indexer head for the network
      operationId: get-indexer-head-by-network
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.HeadResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Show indexer head for the network
      tags:
      - head
  /v1/implicit/{network}/{counter}:
    get:
      consumes:
      - application/json
      operationId: get-implicit-operation
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: Counter
        in: path
        name: counter
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.Operation'
            type: array
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get implicit operation
      tags:
      - operations
  /v1/off_chain_view:
    post:
      consumes:
      - application/json
      description: Get JSON schema for off-chain view
      operationId: get-off-chain-view
      parameters:
      - description: 'Micheline. Limit: 1MB'
        in: body
        name: body
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ViewSchema'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get JSON schema for off-chain view
      tags:
      - contract
  /v1/operation/{network}/{id}/diff:
    get:
      consumes:
      - application/json
      operationId: get-operation-diff
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: Internal BCD operation ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ast.MiguelNode'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get operation storage diff
      tags:
      - operations
  /v1/operation/{network}/{id}/error_location:
    get:
      consumes:
      - application/json
      description: Get code line where operation failed
      operationId: get-operation-error-location
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: Internal BCD operation ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.GetErrorLocationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get code line where operation failed
      tags:
      - operations
  /v1/opg/{hash}:
    get:
      consumes:
      - application/json
      description: Get operation group by hash
      operationId: get-opg
      parameters:
      - description: Operation group hash
        in: path
        maxLength: 51
        minLength: 51
        name: hash
        required: true
        type: string
      - description: Search operation in mempool or not
        in: query
        name: with_mempool
        type: boolean
      - description: Include storage diff to operations or not
        in: query
        name: with_storage_diff
        type: boolean
      - description: Network
        in: query
        name: network
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.Operation'
            type: array
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get operation group
      tags:
      - operations
  /v1/opg/{hash}/{counter}:
    get:
      consumes:
      - application/json
      description: Get operations by hash and counter
      operationId: get-operations-by-hash-and-counter
      parameters:
      - description: Operation group hash
        in: path
        maxLength: 51
        minLength: 51
        name: hash
        required: true
        type: string
      - description: Counter of main operation
        in: path
        name: counter
        required: true
        type: integer
      - description: You can set network field for better performance
        in: query
        name: network
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.Operation'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get operations by hash and counter
      tags:
      - operations
  /v1/stats:
    get:
      consumes:
      - application/json
      description: get indexer states for all networks
      operationId: get-stats
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.Block'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Show indexer stats
      tags:
      - statistics
  /v1/stats/{network}/recently_called_contracts:
    get:
      consumes:
      - application/json
      description: Show recently called contracts
      operationId: get-recenly-called-contracts
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: Contracts count
        in: query
        maximum: 10
        name: size
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.RecentlyCalledContract'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Show recently called contracts
      tags:
      - statistics
swagger: "2.0"
