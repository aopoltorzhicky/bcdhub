{
    "swagger": "2.0",
    "info": {
        "description": "This is API description for Better Call Dev service.",
        "title": "Better Call Dev API",
        "contact": {},
        "license": {},
        "version": "1.0"
    },
    "basePath": "/v1",
    "paths": {
        "/bigmap/{network}/{ptr}": {
            "get": {
                "description": "Get big map info by pointer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bigmap"
                ],
                "summary": "Get big map info by pointer",
                "operationId": "get-bigmap",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Big map pointer",
                        "name": "ptr",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.GetBigMapResponse"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/bigmap/{network}/{ptr}/history": {
            "get": {
                "description": "Get big map actions (alloc/copy/remove)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bigmap"
                ],
                "summary": "Get big map actions (alloc/copy/remove)",
                "operationId": "get-bigmap-history",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Big map pointer",
                        "name": "ptr",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.BigMapHistoryResponse"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/bigmap/{network}/{ptr}/keys": {
            "get": {
                "description": "Get big map keys by pointer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bigmap"
                ],
                "summary": "Get big map keys by pointer",
                "operationId": "get-bigmap-keys",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Big map pointer",
                        "name": "ptr",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search string",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Requested count",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.BigMapResponseItem"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/bigmap/{network}/{ptr}/keys/{key_hash}": {
            "get": {
                "description": "Get big map diffs by pointer and key hash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bigmap"
                ],
                "summary": "Get big map diffs by pointer and key hash",
                "operationId": "get-bigmap-keyhash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Big map pointer",
                        "name": "ptr",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 54,
                        "minLength": 54,
                        "type": "string",
                        "description": "Key hash in big map",
                        "name": "key_hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Requested count",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.BigMapDiffByKeyResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/contract/{network}/{address}": {
            "get": {
                "description": "Show total volume, unique users and transactions count for period",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Show contract stats",
                "operationId": "get-contract-stats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "year",
                            "month",
                            "week",
                            "day"
                        ],
                        "type": "string",
                        "description": "One of periods",
                        "name": "period",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/elastic.DAppStats"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/contract/{network}/{address}/code": {
            "get": {
                "description": "Get contract code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract code",
                "operationId": "get-contract-code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/contract/{network}/{address}/entrypoints": {
            "get": {
                "description": "Get contract entrypoints",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract entrypoints",
                "operationId": "get-contract-entrypoints",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.EntrypointSchema"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/contract/{network}/{address}/entrypoints/data": {
            "post": {
                "description": "Get entrypoint data from schema object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get entrypoint data from schema object",
                "operationId": "get-contract-entrypoints-data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Entrypoint binary path",
                        "name": "bin_path",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Entrypoint`s arguments data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "description": "Return format (michelson | empty if micheline)",
                        "name": "format",
                        "in": "body",
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/contract/{network}/{address}/entrypoints/schema": {
            "get": {
                "description": "Get contract`s entrypoint schema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract`s entrypoint schema",
                "operationId": "get-contract-entrypoints-schema",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Entrypoint name",
                        "name": "entrypoint",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "empty",
                            "latest"
                        ],
                        "type": "string",
                        "description": "Fill storage type",
                        "name": "fill_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.EntrypointSchema"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/contract/{network}/{address}/entrypoints/trace": {
            "post": {
                "description": "Execute entrypoint with passed arguments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Execute entrypoint with passed arguments",
                "operationId": "get-contract-entrypoints-run",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Entrypoint binary path",
                        "name": "bin_path",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Entrypoint`s arguments data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "description": "Operation amount",
                        "name": "amount",
                        "in": "body",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Operation gas limit",
                        "name": "gas_limit",
                        "in": "body",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "description": "Operation sender",
                        "name": "sender",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "description": "Operation source",
                        "name": "source",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.Operation"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/contract/{network}/{address}/mempool": {
            "get": {
                "description": "Get contract mempool operations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract mempool operations",
                "operationId": "get-contract-mempool",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.Operation"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/contract/{network}/{address}/migrations": {
            "get": {
                "description": "Get contract migrations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract migrations",
                "operationId": "get-contract-migrations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.Migration"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/contract/{network}/{address}/operations": {
            "get": {
                "description": "Get contract operations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract operations",
                "operationId": "get-contract-operations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Last operation ID",
                        "name": "last_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Timestamp",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Timestamp",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Expected OPG count",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated operations statuses",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated called entrypoints list",
                        "name": "entrypoints",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.OperationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/contract/{network}/{address}/same": {
            "get": {
                "description": "Get same contracts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get same contracts",
                "operationId": "get-contract-same",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Requested count",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SameContractsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/contract/{network}/{address}/similar": {
            "get": {
                "description": "Get similar contracts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get similar contracts",
                "operationId": "get-contract-similar",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Requested count",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SimilarContractsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/contract/{network}/{address}/storage": {
            "get": {
                "description": "Get contract storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract storage",
                "operationId": "get-contract-storage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Level",
                        "name": "level",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/newmiguel.Node"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/contract/{network}/{address}/storage/raw": {
            "get": {
                "description": "Get contract raw storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract raw storage",
                "operationId": "get-contract-storage-raw",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Level",
                        "name": "level",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/contract/{network}/{address}/storage/rich": {
            "get": {
                "description": "Get contract rich storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract rich storage",
                "operationId": "get-contract-storage-rich",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Level",
                        "name": "level",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/contract/{network}/{address}/storage/schema": {
            "get": {
                "description": "Get contract storage schema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract storage schema",
                "operationId": "get-contract-storage-schema",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "empty",
                            "current"
                        ],
                        "type": "string",
                        "description": "Fill storage type",
                        "name": "fill_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.EntrypointSchema"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/diff": {
            "post": {
                "description": "Get diff between two contracts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get diff between two contracts",
                "operationId": "get-diff",
                "parameters": [
                    {
                        "description": "First compared contract",
                        "name": "left",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CodeDiffLeg"
                        }
                    },
                    {
                        "description": "Second compared contract",
                        "name": "right",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CodeDiffLeg"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CodeDiffResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/operation/{id}/error_location": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "operations"
                ],
                "summary": "Get code line where operation failed",
                "operationId": "get-operation-error-location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Internal BCD operation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.GetErrorLocationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/opg/{hash}": {
            "get": {
                "description": "Get operation group by hash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "operations"
                ],
                "summary": "Get operation group",
                "operationId": "get-opg",
                "parameters": [
                    {
                        "maxLength": 51,
                        "minLength": 51,
                        "type": "string",
                        "description": "Operation group hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.Operation"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/pick_random": {
            "get": {
                "description": "Get random contract with 2 or more operations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Show random contract",
                "operationId": "get-random-contract",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Contract"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "description": "Search any data in contracts, operations and big map diff with filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search in better-call",
                "operationId": "search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Query string",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated field names among which will search",
                        "name": "f",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated networks list for searching",
                        "name": "n",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "o",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Return search result since given timestamp",
                        "name": "s",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Return search result before given timestamp",
                        "name": "e",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "description": "Grouping by contracts similarity. 0 - false, any others - true",
                        "name": "g",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of indices for searching. Values: contract, operation, bigmapdiff",
                        "name": "i",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of languages for searching. Values: smartpy, liquidity, ligo, lorentz, michelson",
                        "name": "l",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/elastic.SearchResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/slug/{slug}": {
            "get": {
                "description": "Get contract by slug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract by slug",
                "operationId": "get-contract-by-slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Alias"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/stats": {
            "get": {
                "description": "get indexer states for all networks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "Show indexer stats",
                "operationId": "get-stats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.Block"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/stats/{network}": {
            "get": {
                "description": "Get detailed statistics for network",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "Network statistics",
                "operationId": "get-network-stats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.NetworkStats"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/stats/{network}/series": {
            "get": {
                "description": "Get count series data for network",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "Get network series",
                "operationId": "get-network-series",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "contract",
                            "operation",
                            "paid_storage_size_diff",
                            "consumed_gas",
                            "users",
                            "volume"
                        ],
                        "type": "string",
                        "description": "One of names",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "year",
                            "month",
                            "week",
                            "day"
                        ],
                        "type": "string",
                        "description": "One of periods",
                        "name": "period",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Contract address",
                        "name": "address",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Series"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/tokens/{network}": {
            "get": {
                "description": "Get all contracts that implement FA1/FA1.2 standard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Get all contracts that implement FA1/FA1.2 standard",
                "operationId": "get-tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset (deprecated)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Last ID",
                        "name": "last_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Requested count",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.PageableTokenContracts"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/tokens/{network}/transfers/{address}": {
            "get": {
                "description": "Get all token transfers (FA1/FA1.2) where given address is src/dst",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Get all token transfers (FA1/FA1.2) where given address is src/dst",
                "operationId": "get-token-transfers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Last transfer ID",
                        "name": "last_id",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Requested count",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.PageableTokenTransfers"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/tokens/{network}/version/{faversion}": {
            "get": {
                "description": "Get all contracts that implement FA1/FA1.2 standard by version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Get all contracts that implement FA1/FA1.2 standard by version",
                "operationId": "get-tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "fa1",
                            "fa12",
                            "fa2"
                        ],
                        "type": "string",
                        "description": "FA token version",
                        "name": "faversion",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset (deprecated)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Last ID",
                        "name": "last_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Requested count",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.PageableTokenContracts"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "cerrors.IError": {
            "type": "object"
        },
        "docstring.Typedef": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/docstring.TypedefArg"
                    }
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "docstring.TypedefArg": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "elastic.DAppStats": {
            "type": "object",
            "properties": {
                "txs": {
                    "type": "integer"
                },
                "users": {
                    "type": "integer"
                },
                "volume": {
                    "type": "integer"
                }
            }
        },
        "elastic.Group": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "top": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/elastic.Top"
                    }
                }
            }
        },
        "elastic.SearchItem": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object"
                },
                "group": {
                    "type": "object",
                    "$ref": "#/definitions/elastic.Group"
                },
                "highlights": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "elastic.SearchResult": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/elastic.SearchItem"
                    }
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "elastic.Top": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                }
            }
        },
        "formatter.DiffResult": {
            "type": "object",
            "properties": {
                "added": {
                    "type": "integer"
                },
                "changed": {
                    "type": "integer"
                },
                "left": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/formatter.Item"
                        }
                    }
                },
                "removed": {
                    "type": "integer"
                },
                "right": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/formatter.Item"
                        }
                    }
                }
            }
        },
        "formatter.Item": {
            "type": "object",
            "properties": {
                "chunk": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": true
        },
        "handlers.Alias": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "KT1CeekjGVRc5ASmgWDc658NBExetoKNuiqz"
                },
                "alias": {
                    "type": "string",
                    "example": "Contract alias"
                },
                "network": {
                    "type": "string",
                    "example": "babylonnet"
                },
                "slug": {
                    "type": "string",
                    "example": "contract_slug"
                }
            }
        },
        "handlers.BigMapDiffByKeyResponse": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "object"
                },
                "key_hash": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.BigMapDiffItem"
                    }
                }
            }
        },
        "handlers.BigMapDiffItem": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "value": {
                    "type": "object"
                }
            }
        },
        "handlers.BigMapHistoryItem": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "destination_ptr": {
                    "type": "integer"
                },
                "source_ptr": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "handlers.BigMapHistoryResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.BigMapHistoryItem"
                    }
                },
                "network": {
                    "type": "string"
                },
                "ptr": {
                    "type": "integer"
                }
            }
        },
        "handlers.BigMapItem": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "object"
                },
                "key_hash": {
                    "type": "string"
                },
                "key_string": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "value": {
                    "type": "object"
                }
            }
        },
        "handlers.BigMapResponseItem": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handlers.BigMapItem"
                }
            }
        },
        "handlers.Block": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "string",
                    "example": "NetXdQprcVkpaWU"
                },
                "hash": {
                    "type": "string",
                    "example": "BLyAEwaXShJuZasvUezHUfLqzZ48V8XrPvXF2wRaH15tmzEpsHT"
                },
                "level": {
                    "type": "integer",
                    "example": 24
                },
                "network": {
                    "type": "string",
                    "example": "mainnet"
                },
                "predecessor": {
                    "type": "string",
                    "example": "BMWVEwEYw9m5iaHzqxDfkPzZTV4rhkSouRh3DkVMVGkxZ3EVaNs"
                },
                "protocol": {
                    "type": "string",
                    "example": "PtCJ7pwoxe8JasnHY8YonnLYjcVHmhiARPJvqcC6VfHT5s8k8sY"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2018-06-30T18:05:27Z"
                }
            }
        },
        "handlers.CodeDiffLeg": {
            "type": "object",
            "required": [
                "address",
                "network"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "network": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                }
            }
        },
        "handlers.CodeDiffResponse": {
            "type": "object",
            "properties": {
                "diff": {
                    "type": "object",
                    "$ref": "#/definitions/formatter.DiffResult"
                },
                "left": {
                    "type": "object",
                    "$ref": "#/definitions/handlers.CodeDiffLeg"
                },
                "right": {
                    "type": "object",
                    "$ref": "#/definitions/handlers.CodeDiffLeg"
                }
            }
        },
        "handlers.Contract": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                },
                "annotations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "balance": {
                    "type": "integer"
                },
                "delegate": {
                    "type": "string"
                },
                "delegate_alias": {
                    "type": "string"
                },
                "entrypoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fail_strings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "found_by": {
                    "type": "string"
                },
                "hardcoded": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hash": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "last_action": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "manager": {
                    "type": "string"
                },
                "migrations_count": {
                    "type": "integer"
                },
                "network": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "subscription": {
                    "type": "object",
                    "$ref": "#/definitions/handlers.Subscription"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timestamp": {
                    "type": "string"
                },
                "total_subscribed": {
                    "type": "integer"
                },
                "total_withdrawn": {
                    "type": "integer"
                },
                "tx_count": {
                    "type": "integer"
                }
            }
        },
        "handlers.EntrypointSchema": {
            "type": "object",
            "properties": {
                "bin_path": {
                    "type": "string"
                },
                "default_model": {
                    "type": "object",
                    "$ref": "#/definitions/jsonschema.DefaultModel"
                },
                "name": {
                    "type": "string"
                },
                "schema": {
                    "type": "object",
                    "$ref": "#/definitions/jsonschema.Schema"
                },
                "typedef": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/docstring.Typedef"
                    }
                }
            }
        },
        "handlers.Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "text"
                }
            }
        },
        "handlers.GetBigMapResponse": {
            "type": "object",
            "properties": {
                "active_keys": {
                    "type": "integer"
                },
                "address": {
                    "type": "string"
                },
                "contract_alias": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "ptr": {
                    "type": "integer"
                },
                "total_keys": {
                    "type": "integer"
                },
                "typedef": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/docstring.Typedef"
                    }
                }
            }
        },
        "handlers.GetErrorLocationResponse": {
            "type": "object",
            "properties": {
                "end_col": {
                    "type": "integer"
                },
                "failed_row": {
                    "type": "integer"
                },
                "first_row": {
                    "type": "integer"
                },
                "start_col": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "handlers.Migration": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "prev_protocol": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "handlers.NetworkStats": {
            "type": "object",
            "properties": {
                "contracts_count": {
                    "type": "integer",
                    "example": 10
                },
                "languages": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "operations_count": {
                    "type": "integer",
                    "example": 100
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.Protocol"
                    }
                }
            }
        },
        "handlers.Operation": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "balance": {
                    "type": "integer"
                },
                "burned": {
                    "type": "integer"
                },
                "content_index": {
                    "type": "integer"
                },
                "counter": {
                    "type": "integer"
                },
                "delegate": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "destination_alias": {
                    "type": "string"
                },
                "entrypoint": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cerrors.IError"
                    }
                },
                "fee": {
                    "type": "integer"
                },
                "gas_limit": {
                    "type": "integer"
                },
                "hash": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "internal": {
                    "type": "boolean"
                },
                "kind": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "manager_pubkey": {
                    "type": "string"
                },
                "mempool": {
                    "type": "boolean"
                },
                "network": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object"
                },
                "protocol": {
                    "type": "string"
                },
                "public_key": {
                    "type": "string"
                },
                "rawMempool": {
                    "type": "object"
                },
                "result": {
                    "type": "object",
                    "$ref": "#/definitions/handlers.OperationResult"
                },
                "source": {
                    "type": "string"
                },
                "source_alias": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "storage_diff": {
                    "type": "object"
                },
                "storage_limit": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "handlers.OperationResponse": {
            "type": "object",
            "properties": {
                "last_id": {
                    "type": "string",
                    "example": "1588640276994159"
                },
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.Operation"
                    }
                }
            }
        },
        "handlers.OperationResult": {
            "type": "object",
            "properties": {
                "allocated_destination_contract": {
                    "type": "boolean",
                    "example": true
                },
                "consumed_gas": {
                    "type": "integer",
                    "example": 100
                },
                "paid_storage_size_diff": {
                    "type": "integer",
                    "example": 300
                },
                "storage_size": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "handlers.PageableTokenContracts": {
            "type": "object",
            "properties": {
                "last_id": {
                    "type": "integer"
                },
                "tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.TokenContract"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handlers.PageableTokenTransfers": {
            "type": "object",
            "properties": {
                "last_id": {
                    "type": "string"
                },
                "transfers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.TokenTransfer"
                    }
                }
            }
        },
        "handlers.Protocol": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string",
                    "example": "Carthage"
                },
                "end_level": {
                    "type": "integer",
                    "example": 0
                },
                "hash": {
                    "type": "string",
                    "example": "PsCARTHAGazKbHtnKfLzQg3kms52kSRpgnDY982a9oYsSXRLQEb"
                },
                "network": {
                    "type": "string",
                    "example": "mainnet"
                },
                "start_level": {
                    "type": "integer",
                    "example": 851969
                }
            }
        },
        "handlers.SameContractsResponse": {
            "type": "object",
            "properties": {
                "contracts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.Contract"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "handlers.Series": {
            "type": "array",
            "items": {
                "type": "array",
                "items": {
                    "type": "integer"
                }
            }
        },
        "handlers.SimilarContract": {
            "type": "object",
            "properties": {
                "added": {
                    "type": "integer"
                },
                "address": {
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                },
                "annotations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "balance": {
                    "type": "integer"
                },
                "count": {
                    "type": "integer"
                },
                "delegate": {
                    "type": "string"
                },
                "delegate_alias": {
                    "type": "string"
                },
                "entrypoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fail_strings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "found_by": {
                    "type": "string"
                },
                "hardcoded": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hash": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "last_action": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "manager": {
                    "type": "string"
                },
                "migrations_count": {
                    "type": "integer"
                },
                "network": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string"
                },
                "removed": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "subscription": {
                    "type": "object",
                    "$ref": "#/definitions/handlers.Subscription"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timestamp": {
                    "type": "string"
                },
                "total_subscribed": {
                    "type": "integer"
                },
                "total_withdrawn": {
                    "type": "integer"
                },
                "tx_count": {
                    "type": "integer"
                }
            }
        },
        "handlers.SimilarContractsResponse": {
            "type": "object",
            "properties": {
                "contracts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.SimilarContract"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "handlers.Subscription": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "subscribed_at": {
                    "type": "string"
                },
                "watch_calls": {
                    "type": "boolean"
                },
                "watch_deployments": {
                    "type": "boolean"
                },
                "watch_errors": {
                    "type": "boolean"
                },
                "watch_mempool": {
                    "type": "boolean"
                },
                "watch_migrations": {
                    "type": "boolean"
                },
                "watch_same": {
                    "type": "boolean"
                },
                "watch_similar": {
                    "type": "boolean"
                }
            }
        },
        "handlers.TokenContract": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                },
                "balance": {
                    "type": "integer"
                },
                "delegate": {
                    "type": "string"
                },
                "delegate_alias": {
                    "type": "string"
                },
                "last_action": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "manager": {
                    "type": "string"
                },
                "methods": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/handlers.TokenMethodStats"
                    }
                },
                "network": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "tx_count": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "handlers.TokenMethodStats": {
            "type": "object",
            "properties": {
                "average_consumed_gas": {
                    "type": "integer"
                },
                "call_count": {
                    "type": "integer"
                }
            }
        },
        "handlers.TokenTransfer": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "contract": {
                    "type": "string"
                },
                "counter": {
                    "type": "integer"
                },
                "from": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "network": {
                    "type": "string"
                },
                "nonce": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "jsonschema.DefaultModel": {
            "type": "object",
            "additionalProperties": true
        },
        "jsonschema.Schema": {
            "type": "object",
            "additionalProperties": true
        },
        "newmiguel.Node": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/newmiguel.Node"
                    }
                },
                "diff_type": {
                    "type": "string"
                },
                "from": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "prim": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "object"
                }
            }
        }
    }
}