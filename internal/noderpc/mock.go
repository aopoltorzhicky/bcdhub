// Code generated by MockGen. DO NOT EDIT.
// Source: internal/noderpc/interface.go

// Package noderpc is a generated GoMock package.
package noderpc

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockINode is a mock of INode interface
type MockINode struct {
	ctrl     *gomock.Controller
	recorder *MockINodeMockRecorder
}

// MockINodeMockRecorder is the mock recorder for MockINode
type MockINodeMockRecorder struct {
	mock *MockINode
}

// NewMockINode creates a new mock instance
func NewMockINode(ctrl *gomock.Controller) *MockINode {
	mock := &MockINode{ctrl: ctrl}
	mock.recorder = &MockINodeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockINode) EXPECT() *MockINodeMockRecorder {
	return m.recorder
}

// GetHead mocks base method
func (m *MockINode) GetHead() (Header, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHead")
	ret0, _ := ret[0].(Header)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHead indicates an expected call of GetHead
func (mr *MockINodeMockRecorder) GetHead() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHead", reflect.TypeOf((*MockINode)(nil).GetHead))
}

// GetHeader mocks base method
func (m *MockINode) GetHeader(arg0 int64) (Header, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHeader", arg0)
	ret0, _ := ret[0].(Header)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHeader indicates an expected call of GetHeader
func (mr *MockINodeMockRecorder) GetHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHeader", reflect.TypeOf((*MockINode)(nil).GetHeader), arg0)
}

// GetScriptJSON mocks base method
func (m *MockINode) GetScriptJSON(arg0 string, arg1 int64) (Script, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetScriptJSON", arg0, arg1)
	ret0, _ := ret[0].(Script)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetScriptJSON indicates an expected call of GetScriptJSON
func (mr *MockINodeMockRecorder) GetScriptJSON(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetScriptJSON", reflect.TypeOf((*MockINode)(nil).GetScriptJSON), arg0, arg1)
}

// GetRawScript mocks base method
func (m *MockINode) GetRawScript(address string, level int64) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRawScript", address, level)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRawScript indicates an expected call of GetRawScript
func (mr *MockINodeMockRecorder) GetRawScript(address, level interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRawScript", reflect.TypeOf((*MockINode)(nil).GetRawScript), address, level)
}

// GetScriptStorageRaw mocks base method
func (m *MockINode) GetScriptStorageRaw(arg0 string, arg1 int64) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetScriptStorageRaw", arg0, arg1)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetScriptStorageRaw indicates an expected call of GetScriptStorageRaw
func (mr *MockINodeMockRecorder) GetScriptStorageRaw(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetScriptStorageRaw", reflect.TypeOf((*MockINode)(nil).GetScriptStorageRaw), arg0, arg1)
}

// GetContractBalance mocks base method
func (m *MockINode) GetContractBalance(arg0 string, arg1 int64) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetContractBalance", arg0, arg1)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetContractBalance indicates an expected call of GetContractBalance
func (mr *MockINodeMockRecorder) GetContractBalance(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContractBalance", reflect.TypeOf((*MockINode)(nil).GetContractBalance), arg0, arg1)
}

// GetContractData mocks base method
func (m *MockINode) GetContractData(arg0 string, arg1 int64) (ContractData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetContractData", arg0, arg1)
	ret0, _ := ret[0].(ContractData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetContractData indicates an expected call of GetContractData
func (mr *MockINodeMockRecorder) GetContractData(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContractData", reflect.TypeOf((*MockINode)(nil).GetContractData), arg0, arg1)
}

// GetOPG mocks base method
func (m *MockINode) GetOPG(block int64) ([]OperationGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOPG", block)
	ret0, _ := ret[0].([]OperationGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOPG indicates an expected call of GetOPG
func (mr *MockINodeMockRecorder) GetOPG(block interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOPG", reflect.TypeOf((*MockINode)(nil).GetOPG), block)
}

// GetLightOPG mocks base method
func (m *MockINode) GetLightOPG(block int64) ([]LightOperationGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLightOPG", block)
	ret0, _ := ret[0].([]LightOperationGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLightOPG indicates an expected call of GetLightOPG
func (mr *MockINodeMockRecorder) GetLightOPG(block interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLightOPG", reflect.TypeOf((*MockINode)(nil).GetLightOPG), block)
}

// GetContractsByBlock mocks base method
func (m *MockINode) GetContractsByBlock(arg0 int64) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetContractsByBlock", arg0)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetContractsByBlock indicates an expected call of GetContractsByBlock
func (mr *MockINodeMockRecorder) GetContractsByBlock(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContractsByBlock", reflect.TypeOf((*MockINode)(nil).GetContractsByBlock), arg0)
}

// GetNetworkConstants mocks base method
func (m *MockINode) GetNetworkConstants(arg0 int64) (Constants, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNetworkConstants", arg0)
	ret0, _ := ret[0].(Constants)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNetworkConstants indicates an expected call of GetNetworkConstants
func (mr *MockINodeMockRecorder) GetNetworkConstants(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNetworkConstants", reflect.TypeOf((*MockINode)(nil).GetNetworkConstants), arg0)
}

// RunCode mocks base method
func (m *MockINode) RunCode(arg0, arg1, arg2 []byte, arg3, arg4, arg5, arg6, arg7 string, arg8, arg9 int64) (RunCodeResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RunCode", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)
	ret0, _ := ret[0].(RunCodeResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RunCode indicates an expected call of RunCode
func (mr *MockINodeMockRecorder) RunCode(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunCode", reflect.TypeOf((*MockINode)(nil).RunCode), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)
}

// RunOperation mocks base method
func (m *MockINode) RunOperation(arg0, arg1, arg2, arg3 string, arg4, arg5, arg6, arg7, arg8 int64, arg9 []byte) (OperationGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RunOperation", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)
	ret0, _ := ret[0].(OperationGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RunOperation indicates an expected call of RunOperation
func (mr *MockINodeMockRecorder) RunOperation(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunOperation", reflect.TypeOf((*MockINode)(nil).RunOperation), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)
}

// RunOperationLight mocks base method
func (m *MockINode) RunOperationLight(arg0, arg1, arg2, arg3 string, arg4, arg5, arg6, arg7, arg8 int64, arg9 []byte) (LightOperationGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RunOperationLight", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)
	ret0, _ := ret[0].(LightOperationGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RunOperationLight indicates an expected call of RunOperationLight
func (mr *MockINodeMockRecorder) RunOperationLight(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunOperationLight", reflect.TypeOf((*MockINode)(nil).RunOperationLight), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)
}

// GetCounter mocks base method
func (m *MockINode) GetCounter(arg0 string) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCounter", arg0)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCounter indicates an expected call of GetCounter
func (mr *MockINodeMockRecorder) GetCounter(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCounter", reflect.TypeOf((*MockINode)(nil).GetCounter), arg0)
}

// GetBigMapType mocks base method
func (m *MockINode) GetBigMapType(ptr, level int64) (BigMap, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBigMapType", ptr, level)
	ret0, _ := ret[0].(BigMap)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBigMapType indicates an expected call of GetBigMapType
func (mr *MockINodeMockRecorder) GetBigMapType(ptr, level interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBigMapType", reflect.TypeOf((*MockINode)(nil).GetBigMapType), ptr, level)
}

// GetBlockMetadata mocks base method
func (m *MockINode) GetBlockMetadata(level int64) (Metadata, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlockMetadata", level)
	ret0, _ := ret[0].(Metadata)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlockMetadata indicates an expected call of GetBlockMetadata
func (mr *MockINodeMockRecorder) GetBlockMetadata(level interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlockMetadata", reflect.TypeOf((*MockINode)(nil).GetBlockMetadata), level)
}
