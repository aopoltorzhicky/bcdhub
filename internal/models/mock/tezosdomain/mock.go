// Code generated by MockGen. DO NOT EDIT.
// Source: tezosdomain/repository.go

// Package tezosdomain is a generated GoMock package.
package tezosdomain

import (
	td "github.com/baking-bad/bcdhub/internal/models/tezosdomain"
	types "github.com/baking-bad/bcdhub/internal/models/types"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRepository is a mock of Repository interface
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// ListDomains mocks base method
func (m *MockRepository) ListDomains(network types.Network, size, offset int64) (td.DomainsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDomains", network, size, offset)
	ret0, _ := ret[0].(td.DomainsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDomains indicates an expected call of ListDomains
func (mr *MockRepositoryMockRecorder) ListDomains(network, size, offset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDomains", reflect.TypeOf((*MockRepository)(nil).ListDomains), network, size, offset)
}

// ResolveDomainByAddress mocks base method
func (m *MockRepository) ResolveDomainByAddress(network types.Network, address string) (*td.TezosDomain, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResolveDomainByAddress", network, address)
	ret0, _ := ret[0].(*td.TezosDomain)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ResolveDomainByAddress indicates an expected call of ResolveDomainByAddress
func (mr *MockRepositoryMockRecorder) ResolveDomainByAddress(network, address interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResolveDomainByAddress", reflect.TypeOf((*MockRepository)(nil).ResolveDomainByAddress), network, address)
}
