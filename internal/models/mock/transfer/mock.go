// Code generated by MockGen. DO NOT EDIT.
// Source: transfer/repository.go

// Package transfer is a generated GoMock package.
package transfer

import (
	dapp "github.com/baking-bad/bcdhub/internal/models/dapp"
	transferModel "github.com/baking-bad/bcdhub/internal/models/transfer"
	types "github.com/baking-bad/bcdhub/internal/models/types"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRepository is a mock of Repository interface
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockRepository) Get(ctx transferModel.GetContext) (transferModel.Pageable, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx)
	ret0, _ := ret[0].(transferModel.Pageable)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockRepositoryMockRecorder) Get(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockRepository)(nil).Get), ctx)
}

// GetAll mocks base method
func (m *MockRepository) GetAll(network types.Network, level int64) ([]transferModel.Transfer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", network, level)
	ret0, _ := ret[0].([]transferModel.Transfer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll
func (mr *MockRepositoryMockRecorder) GetAll(network, level interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockRepository)(nil).GetAll), network, level)
}

// GetTransfered mocks base method
func (m *MockRepository) GetTransfered(network types.Network, contract string, tokenID uint64) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransfered", network, contract, tokenID)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTransfered indicates an expected call of GetTransfered
func (mr *MockRepositoryMockRecorder) GetTransfered(network, contract, tokenID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransfered", reflect.TypeOf((*MockRepository)(nil).GetTransfered), network, contract, tokenID)
}

// GetToken24HoursVolume mocks base method
func (m *MockRepository) GetToken24HoursVolume(network types.Network, contract string, initiators, entrypoints []string, tokenID uint64) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetToken24HoursVolume", network, contract, initiators, entrypoints, tokenID)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetToken24HoursVolume indicates an expected call of GetToken24HoursVolume
func (mr *MockRepositoryMockRecorder) GetToken24HoursVolume(network, contract, initiators, entrypoints, tokenID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToken24HoursVolume", reflect.TypeOf((*MockRepository)(nil).GetToken24HoursVolume), network, contract, initiators, entrypoints, tokenID)
}

// GetTokenVolumeSeries mocks base method
func (m *MockRepository) GetTokenVolumeSeries(network types.Network, period string, contracts []string, entrypoints []dapp.DAppContract, tokenID uint64) ([][]float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTokenVolumeSeries", network, period, contracts, entrypoints, tokenID)
	ret0, _ := ret[0].([][]float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTokenVolumeSeries indicates an expected call of GetTokenVolumeSeries
func (mr *MockRepositoryMockRecorder) GetTokenVolumeSeries(network, period, contracts, entrypoints, tokenID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTokenVolumeSeries", reflect.TypeOf((*MockRepository)(nil).GetTokenVolumeSeries), network, period, contracts, entrypoints, tokenID)
}

// CalcBalances mocks base method
func (m *MockRepository) CalcBalances(network types.Network, contract string) ([]transferModel.Balance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CalcBalances", network, contract)
	ret0, _ := ret[0].([]transferModel.Balance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CalcBalances indicates an expected call of CalcBalances
func (mr *MockRepositoryMockRecorder) CalcBalances(network, contract interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CalcBalances", reflect.TypeOf((*MockRepository)(nil).CalcBalances), network, contract)
}
