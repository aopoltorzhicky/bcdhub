// Code generated by MockGen. DO NOT EDIT.
// Source: migration/repository.go

// Package mock_migration is a generated GoMock package.
package mock_migration

import (
	migration "github.com/baking-bad/bcdhub/internal/models/migration"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRepository is a mock of Repository interface
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// GetMigrations mocks base method
func (m *MockRepository) GetMigrations(arg0, arg1 string) ([]migration.Migration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMigrations", arg0, arg1)
	ret0, _ := ret[0].([]migration.Migration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMigrations indicates an expected call of GetMigrations
func (mr *MockRepositoryMockRecorder) GetMigrations(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMigrations", reflect.TypeOf((*MockRepository)(nil).GetMigrations), arg0, arg1)
}
