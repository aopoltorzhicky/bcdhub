package docstring

import (
	"encoding/json"
	"testing"
)

func TestGetDocEntrypoints(t *testing.T) {
	tests := []struct {
		name     string
		metadata Metadata
		result   string
	}{
		{
			name: "mainnet/KT1VsSxSXUkgw6zkBGgUuDXXuJs9ToPqkrCg/VestedFunds4",
			metadata: Metadata{
				"0":                 &NodeMetadata{Prim: "or", Args: []string{"0/0"}, Type: "namedunion"},
				"0/0":               &NodeMetadata{FieldName: "Action", Prim: "pair", Args: []string{"0/0/0", "0/0/1"}, Type: "namedtuple", Name: "Action"},
				"0/0/0":             &NodeMetadata{FieldName: "action_input", Prim: "or", Args: []string{"0/0/0/0/0", "0/0/0/0/1/o", "0/0/0/1/0", "0/0/0/1/1/o"}, Type: "namedunion", Name: "action_input"},
				"0/0/0/0":           &NodeMetadata{Prim: "or", Type: "or"},
				"0/0/0/0/0":         &NodeMetadata{FieldName: "Transfer", Prim: "pair", Args: []string{"0/0/0/0/0/0", "0/0/0/0/0/1"}, Type: "namedtuple", Name: "Transfer"},
				"0/0/0/0/0/0":       &NodeMetadata{FieldName: "dest", Prim: "contract", Parameter: "{\"prim\":\"unit\"}", Type: "contract", Name: "dest"},
				"0/0/0/0/0/1":       &NodeMetadata{FieldName: "transfer_amount", Prim: "mutez", Type: "mutez", Name: "transfer_amount"},
				"0/0/0/0/1":         &NodeMetadata{FieldName: "Set_pour", Prim: "option", Type: "option"},
				"0/0/0/0/1/o":       &NodeMetadata{Prim: "pair", Args: []string{"0/0/0/0/1/o/0", "0/0/0/0/1/o/1"}, Type: "namedtuple", Name: "Set_pour"},
				"0/0/0/0/1/o/0":     &NodeMetadata{FieldName: "pour_dest", Prim: "contract", Parameter: "{\"prim\":\"unit\"}", Type: "contract", Name: "pour_dest"},
				"0/0/0/0/1/o/1":     &NodeMetadata{FieldName: "pour_authorizer", Prim: "key", Type: "key", Name: "pour_authorizer"},
				"0/0/0/1":           &NodeMetadata{Prim: "or", Type: "or"},
				"0/0/0/1/0":         &NodeMetadata{FieldName: "Set_keys", Prim: "pair", Args: []string{"0/0/0/1/0/0", "0/0/0/1/0/1"}, Type: "namedtuple", Name: "Set_keys"},
				"0/0/0/1/0/0":       &NodeMetadata{FieldName: "key_groups", Prim: "list", Type: "list", Name: "key_groups"},
				"0/0/0/1/0/0/l":     &NodeMetadata{Prim: "pair", Args: []string{"0/0/0/1/0/0/l/0", "0/0/0/1/0/0/l/1"}, Type: "namedtuple"},
				"0/0/0/1/0/0/l/0":   &NodeMetadata{FieldName: "signatories", Prim: "list", Type: "list", Name: "signatories"},
				"0/0/0/1/0/0/l/0/l": &NodeMetadata{Prim: "key", Type: "key"},
				"0/0/0/1/0/0/l/1":   &NodeMetadata{FieldName: "group_threshold", Prim: "nat", Type: "nat", Name: "group_threshold"},
				"0/0/0/1/0/1":       &NodeMetadata{FieldName: "overall_threshold", Prim: "nat", Type: "nat", Name: "overall_threshold"},
				"0/0/0/1/1":         &NodeMetadata{FieldName: "Set_delegate", Prim: "option", Type: "option"},
				"0/0/0/1/1/o":       &NodeMetadata{Prim: "key_hash", Type: "key_hash", Name: "Set_delegate"},
				"0/0/1":             &NodeMetadata{FieldName: "signatures", Prim: "list", Type: "list", Name: "signatures"},
				"0/0/1/l":           &NodeMetadata{Prim: "list", Type: "list"},
				"0/0/1/l/l":         &NodeMetadata{Prim: "option", Type: "option"},
				"0/0/1/l/l/o":       &NodeMetadata{Prim: "signature", Type: "signature"},
			},
			result: `[{"name":"Action","typedef":[{"name":"Action","type":"pair","args":[{"key":"action_input","value":"$action_input"},{"key":"signatures","value":"list(list(option(signature)))"}]},{"name":"action_input","type":"or","args":[{"key":"Transfer","value":"$Transfer"},{"key":"Set_pour","value":"option($Set_pour)"},{"key":"Set_keys","value":"$Set_keys"},{"key":"Set_delegate","value":"option(key_hash)"}]},{"name":"Transfer","type":"pair","args":[{"key":"dest","value":"contract(unit)"},{"key":"transfer_amount","value":"mutez"}]},{"name":"Set_pour","type":"pair","args":[{"key":"pour_dest","value":"contract(unit)"},{"key":"pour_authorizer","value":"key"}]},{"name":"Set_keys","type":"pair","args":[{"key":"key_groups","value":"list($key_groups_item)"},{"key":"overall_threshold","value":"nat"}]},{"name":"key_groups_item","type":"pair","args":[{"key":"signatories","value":"list(key)"},{"key":"group_threshold","value":"nat"}]}]}]`,
		},
		{
			name: "mainnet/KT1PWx2mnDueood7fEmfbBDKx1D9BAnnXitn/tzBTC",
			metadata: Metadata{
				"0/0/1/1/1":                 &NodeMetadata{FieldName: "getTotalMinted", Prim: "pair", Args: []string{"0/0/1/1/1/0", "0/0/1/1/1/1"}, Type: "tuple", Name: "getTotalMinted"},
				"0/1":                       &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/1/1":                   &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/1/1/1/1/0/1/1":         &NodeMetadata{TypeName: "operator", FieldName: "removeOperator", Prim: "address", Type: "address", Name: "removeOperator"},
				"0/1/1/1/1/0/0/1/0/0":       &NodeMetadata{TypeName: "current", Prim: "nat", Type: "nat", Name: "current"},
				"0/1/1/1/1/0/1/0/1":         &NodeMetadata{FieldName: "epwFinishUpgrade", Prim: "unit", Type: "unit", Name: "epwFinishUpgrade"},
				"0/1/1/1/1/1":               &NodeMetadata{Prim: "or", Type: "or"},
				"0/0/1/1/0/0":               &NodeMetadata{Prim: "unit", Type: "unit"},
				"0/1/0/0":                   &NodeMetadata{FieldName: "getTotalBurned", Prim: "pair", Args: []string{"0/1/0/0/0", "0/1/0/0/1"}, Type: "tuple", Name: "getTotalBurned"},
				"0/1/1/1/1/0/0/0/1/1/0":     &NodeMetadata{TypeName: "migrationScript", Prim: "lambda", Parameter: "{\"prim\":\"big_map\",\"args\":[{\"prim\":\"bytes\"},{\"prim\":\"bytes\"}]}", Type: "lambda"},
				"0/1/1/1/1/0/0/0/1/1/1/1/o": &NodeMetadata{Prim: "lambda", Parameter: "{\"prim\":\"pair\",\"args\":[{\"prim\":\"unit\"},{\"prim\":\"big_map\",\"args\":[{\"prim\":\"bytes\"},{\"prim\":\"bytes\"}]}]}", Type: "lambda"},
				"0/1/1/1/1/0/0/0/1/1":       &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/1/1/1/1/0/1/1/0/1":       &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/1/1/1/1/0/1/1/0/1/0":     &NodeMetadata{TypeName: "to", Prim: "address", Type: "address", Name: "to"},
				"0/1/1/1/1/1/0/0/1":         &NodeMetadata{TypeName: "value", FieldName: "burn", Prim: "nat", Type: "nat", Name: "burn"},
				"0/0/0/1/0":                 &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/1/0/0/0":                 &NodeMetadata{Prim: "unit", Type: "unit"},
				"0/1/0/1/1":                 &NodeMetadata{Prim: "contract", Parameter: "{\"prim\":\"address\"}", Type: "contract"},
				"0/1/1/1/1/0/0/0/0/1":       &NodeMetadata{Prim: "bytes", Type: "bytes"},
				"0/1/1/1/1/1/1/0/0":         &NodeMetadata{TypeName: "redeem", FieldName: "setRedeemAddress", Prim: "address", Type: "address", Name: "setRedeemAddress"},
				"0/1/1/1/1/0/0/0/1/1/1/0":   &NodeMetadata{TypeName: "newCode", Prim: "option", Type: "option"},
				"0/1/1/1/1/1/1/1/1/0":       &NodeMetadata{TypeName: "newOwner", FieldName: "transferOwnership", Prim: "address", Type: "address", Name: "transferOwnership"},
				"0/0/1/1/1/0":               &NodeMetadata{Prim: "unit", Type: "unit"},
				"0/1/1/1/0/0":               &NodeMetadata{Prim: "list", Type: "list"},
				"0/1/1/1/0/0/l":             &NodeMetadata{Prim: "nat", Type: "nat"},
				"0/1/1/1/0/1":               &NodeMetadata{Prim: "contract", Parameter: "{\"prim\":\"list\",\"args\":[{\"prim\":\"pair\",\"args\":[{\"prim\":\"nat\"},{\"prim\":\"pair\",\"args\":[{\"prim\":\"string\"},{\"prim\":\"pair\",\"args\":[{\"prim\":\"string\"},{\"prim\":\"pair\",\"args\":[{\"prim\":\"nat\"},{\"prim\":\"map\",\"args\":[{\"prim\":\"string\"},{\"prim\":\"string\"}]}]}]}]}]}]}", Type: "contract"},
				"0/1/1/1/1/0/0/0/0":         &NodeMetadata{FieldName: "run", Prim: "pair", Args: []string{"0/1/1/1/1/0/0/0/0/0", "0/1/1/1/1/0/0/0/0/1"}, Type: "tuple", Name: "run"},
				"0/0/1/0/1":                 &NodeMetadata{Prim: "contract", Parameter: "{\"prim\":\"nat\"}", Type: "contract"},
				"0/0/1/1/1/1":               &NodeMetadata{Prim: "contract", Parameter: "{\"prim\":\"nat\"}", Type: "contract"},
				"0/1/1/0":                   &NodeMetadata{FieldName: "getRedeemAddress", Prim: "pair", Args: []string{"0/1/1/0/0", "0/1/1/0/1"}, Type: "tuple", Name: "getRedeemAddress"},
				"0/1/1/1/1/0":               &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/1/1/1/0/0/0/1/1/1":     &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/1/1/1/1/0/1/1/0":         &NodeMetadata{FieldName: "transfer", Prim: "pair", Args: []string{"0/1/1/1/1/0/1/1/0/0", "0/1/1/1/1/0/1/1/0/1/0", "0/1/1/1/1/0/1/1/0/1/1"}, Type: "namedtuple", Name: "transfer"},
				"0/1/1/1/1/1/0/0/0/1":       &NodeMetadata{TypeName: "value", Prim: "nat", Type: "nat", Name: "value"},
				"0/1/1/1/1/1/1/0/1":         &NodeMetadata{FieldName: "pause", Prim: "unit", Type: "unit", Name: "pause"},
				"0/0/0/1/0/0":               &NodeMetadata{TypeName: "owner", Prim: "address", Type: "address", Name: "owner"},
				"0/0/1/0":                   &NodeMetadata{FieldName: "getBalance", Prim: "pair", Args: []string{"0/0/1/0/0", "0/0/1/0/1"}, Type: "namedtuple", Name: "getBalance"},
				"0/1/0/1":                   &NodeMetadata{FieldName: "getOwner", Prim: "pair", Args: []string{"0/1/0/1/0", "0/1/0/1/1"}, Type: "tuple", Name: "getOwner"},
				"0/1/1/1/1/0/0/0/1/0/0":     &NodeMetadata{TypeName: "currentVersion", Prim: "nat", Type: "nat"},
				"0/1/0/1/0":                 &NodeMetadata{Prim: "unit", Type: "unit"},
				"0/1/1/1/1/0/0/0/0/0":       &NodeMetadata{Prim: "string", Type: "string"},
				"0/1/1/1/1/0/0/0/1/1/1/0/o": &NodeMetadata{Prim: "lambda", Parameter: "{\"prim\":\"pair\",\"args\":[{\"prim\":\"pair\",\"args\":[{\"prim\":\"string\"},{\"prim\":\"bytes\"}]},{\"prim\":\"big_map\",\"args\":[{\"prim\":\"bytes\"},{\"prim\":\"bytes\"}]}]}", Type: "lambda"},
				"0/1/1/1/1/1/0/0":           &NodeMetadata{Prim: "or", Type: "or"},
				"0/0/0/1":                   &NodeMetadata{FieldName: "getAllowance", Prim: "pair", Args: []string{"0/0/0/1/0/0", "0/0/0/1/0/1", "0/0/0/1/1"}, Type: "namedtuple", Name: "getAllowance"},
				"0/0/0/1/1":                 &NodeMetadata{Prim: "contract", Parameter: "{\"prim\":\"nat\"}", Type: "contract"},
				"0/0/1/1":                   &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/0":                     &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/1/1/1/1/1":             &NodeMetadata{Prim: "or", Type: "or"},
				"0/0/1/0/0":                 &NodeMetadata{TypeName: "owner", Prim: "address", Type: "address", Name: "owner"},
				"0/1/1/1/0":                 &NodeMetadata{FieldName: "getTokenMetadata", Prim: "pair", Args: []string{"0/1/1/1/0/0", "0/1/1/1/0/1"}, Type: "tuple", Name: "getTokenMetadata"},
				"0/1/1/1/1":                 &NodeMetadata{FieldName: "safeEntrypoints", Prim: "or", Type: "or"},
				"0/1/1/1/1/1/1/0":           &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/1/1/1/1/1/1/0":         &NodeMetadata{FieldName: "unpause", Prim: "unit", Type: "unit", Name: "unpause"},
				"0/1/1/1/1/1/1/1/1":         &NodeMetadata{Prim: "or", Type: "or"},
				"0/0/0":                     &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/1/1/1/0/0/0":           &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/1/1/1/0/1/0":           &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/1/1/1/0/1/1/1/0":       &NodeMetadata{TypeName: "spender", Prim: "address", Type: "address", Name: "spender"},
				"0/1/1/1/1/0/1/1/0/1/1":     &NodeMetadata{TypeName: "value", Prim: "nat", Type: "nat", Name: "value"},
				"0/1/1/1/1/1/1/1/1/1":       &NodeMetadata{FieldName: "acceptOwnership", Prim: "unit", Type: "unit", Name: "acceptOwnership"},
				"0/0":                       &NodeMetadata{Prim: "or", Type: "or"},
				"0/0/1/1/0":                 &NodeMetadata{FieldName: "getTotalSupply", Prim: "pair", Args: []string{"0/0/1/1/0/0", "0/0/1/1/0/1"}, Type: "tuple", Name: "getTotalSupply"},
				"0/1/1/1/1/0/0/1/0":         &NodeMetadata{FieldName: "epwBeginUpgrade", Prim: "pair", Args: []string{"0/1/1/1/1/0/0/1/0/0", "0/1/1/1/1/0/0/1/0/1"}, Type: "namedtuple", Name: "epwBeginUpgrade"},
				"0/1/1/1/1/0/0/1/0/1":       &NodeMetadata{TypeName: "new", Prim: "nat", Type: "nat", Name: "new"},
				"0/0/1/1/0/1":               &NodeMetadata{Prim: "contract", Parameter: "{\"prim\":\"nat\"}", Type: "contract"},
				"0/1/1/0/1":                 &NodeMetadata{Prim: "contract", Parameter: "{\"prim\":\"address\"}", Type: "contract"},
				"0/1/1/1/1/0/0/1":           &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/1/1/1/1/1/1":           &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/1/1/1/0/0/0/1/0":       &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/1/1/1/1/0/1/1/0/0":       &NodeMetadata{TypeName: "from", Prim: "address", Type: "address", Name: "from"},
				"0/1/1/1/1/1/0":             &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/1/1/1/1/0/0/0":         &NodeMetadata{FieldName: "mint", Prim: "pair", Args: []string{"0/1/1/1/1/1/0/0/0/0", "0/1/1/1/1/1/0/0/0/1"}, Type: "namedtuple", Name: "mint"},
				"0/1/1/1/1/1/0/1/0":         &NodeMetadata{TypeName: "operator", FieldName: "addOperator", Prim: "address", Type: "address", Name: "addOperator"},
				"0/1/0/0/1":                 &NodeMetadata{Prim: "contract", Parameter: "{\"prim\":\"nat\"}", Type: "contract"},
				"0/1/1/1/1/0/1":             &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/1/1/1/0/1/1":           &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/1/1/1/0/1/1/1/1":       &NodeMetadata{TypeName: "value", Prim: "nat", Type: "nat", Name: "value"},
				"0/0/0/0":                   &NodeMetadata{FieldName: "getVersion", Prim: "pair", Args: []string{"0/0/0/0/0", "0/0/0/0/1"}, Type: "tuple", Name: "getVersion"},
				"0/0/0/1/0/1":               &NodeMetadata{TypeName: "spender", Prim: "address", Type: "address", Name: "spender"},
				"0/1/1/1/1/0/0/0/1":         &NodeMetadata{FieldName: "upgrade", Prim: "pair", Args: []string{"0/1/1/1/1/0/0/0/1/0/0", "0/1/1/1/1/0/0/0/1/0/1", "0/1/1/1/1/0/0/0/1/1/0", "0/1/1/1/1/0/0/0/1/1/1/0/o", "0/1/1/1/1/0/0/0/1/1/1/1/o"}, Type: "tuple", Name: "upgrade"},
				"0/1/1/1/1/0/0/0/1/0/1":     &NodeMetadata{TypeName: "newVersion", Prim: "nat", Type: "nat"},
				"0/1/1/1/1/0/1/0/0":         &NodeMetadata{TypeName: "contractcode", FieldName: "epwSetCode", Prim: "lambda", Parameter: "{\"prim\":\"pair\",\"args\":[{\"prim\":\"pair\",\"args\":[{\"prim\":\"string\"},{\"prim\":\"bytes\"}]},{\"prim\":\"big_map\",\"args\":[{\"prim\":\"bytes\"},{\"prim\":\"bytes\"}]}]}", Type: "lambda", Name: "epwSetCode"},
				"0/1/1/1/1/1/0/0/0/0":       &NodeMetadata{TypeName: "to", Prim: "address", Type: "address", Name: "to"},
				"0/1/1/1/1/1/0/1":           &NodeMetadata{Prim: "or", Type: "or"},
				"0":                         &NodeMetadata{Prim: "or", Args: []string{"0/0/0/0", "0/0/0/1", "0/0/1/0", "0/0/1/1/0", "0/0/1/1/1", "0/1/0/0", "0/1/0/1", "0/1/1/0", "0/1/1/1/0", "0/1/1/1/1/0/0/0/0", "0/1/1/1/1/0/0/0/1", "0/1/1/1/1/0/0/1/0", "0/1/1/1/1/0/0/1/1", "0/1/1/1/1/0/1/0/0", "0/1/1/1/1/0/1/0/1", "0/1/1/1/1/0/1/1/0", "0/1/1/1/1/0/1/1/1", "0/1/1/1/1/1/0/0/0", "0/1/1/1/1/1/0/0/1", "0/1/1/1/1/1/0/1/0", "0/1/1/1/1/1/0/1/1", "0/1/1/1/1/1/1/0/0", "0/1/1/1/1/1/1/0/1", "0/1/1/1/1/1/1/1/0", "0/1/1/1/1/1/1/1/1/0", "0/1/1/1/1/1/1/1/1/1"}, Type: "namedunion"},
				"0/0/0/0/1":                 &NodeMetadata{Prim: "contract", Parameter: "{\"prim\":\"nat\"}", Type: "contract"},
				"0/1/1/1/1/0/0/0/1/1/1/1":   &NodeMetadata{TypeName: "newPermCode", Prim: "option", Type: "option"},
				"0/1/1/1/1/0/0/1/1":         &NodeMetadata{TypeName: "migrationscript", FieldName: "epwApplyMigration", Prim: "lambda", Parameter: "{\"prim\":\"big_map\",\"args\":[{\"prim\":\"bytes\"},{\"prim\":\"bytes\"}]}", Type: "lambda", Name: "epwApplyMigration"},
				"0/1/1/1/1/0/0":             &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/1/1/1/0/1/1/1":         &NodeMetadata{FieldName: "approve", Prim: "pair", Args: []string{"0/1/1/1/1/0/1/1/1/0", "0/1/1/1/1/0/1/1/1/1"}, Type: "namedtuple", Name: "approve"},
				"0/0/0/0/0":                 &NodeMetadata{Prim: "unit", Type: "unit"},
				"0/0/1":                     &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/1":                     &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/1/0/0":                 &NodeMetadata{Prim: "unit", Type: "unit"},
			},
			result: `[{"name":"getVersion","typedef":[{"name":"getVersion","type":"pair","args":[{"value":"unit"},{"value":"contract(nat)"}]}]},{"name":"getAllowance","typedef":[{"name":"getAllowance","type":"pair","args":[{"key":"owner","value":"address"},{"key":"spender","value":"address"},{"value":"contract(nat)"}]}]},{"name":"getBalance","typedef":[{"name":"getBalance","type":"pair","args":[{"key":"owner","value":"address"},{"value":"contract(nat)"}]}]},{"name":"getTotalSupply","typedef":[{"name":"getTotalSupply","type":"pair","args":[{"value":"unit"},{"value":"contract(nat)"}]}]},{"name":"getTotalMinted","typedef":[{"name":"getTotalMinted","type":"pair","args":[{"value":"unit"},{"value":"contract(nat)"}]}]},{"name":"getTotalBurned","typedef":[{"name":"getTotalBurned","type":"pair","args":[{"value":"unit"},{"value":"contract(nat)"}]}]},{"name":"getOwner","typedef":[{"name":"getOwner","type":"pair","args":[{"value":"unit"},{"value":"contract(address)"}]}]},{"name":"getRedeemAddress","typedef":[{"name":"getRedeemAddress","type":"pair","args":[{"value":"unit"},{"value":"contract(address)"}]}]},{"name":"getTokenMetadata","typedef":[{"name":"getTokenMetadata","type":"pair","args":[{"value":"list(nat)"},{"value":"contract($contract0_param)"}]},{"name":"contract0_param","type":"list (pair nat (pair string (pair string (pair nat (map string string)))))"}]},{"name":"run","typedef":[{"name":"run","type":"pair(string, bytes)"}]},{"name":"upgrade","typedef":[{"name":"upgrade","type":"pair","args":[{"value":"nat"},{"value":"nat"},{"value":"lambda($lambda0_input)"},{"value":"option(lambda($lambda1_input))"},{"value":"option(lambda($lambda2_input))"}]},{"name":"lambda0_input","type":"big_map bytes bytes"},{"name":"lambda1_input","type":"pair (pair string bytes) (big_map bytes bytes)"},{"name":"lambda2_input","type":"pair unit (big_map bytes bytes)"}]},{"name":"epwBeginUpgrade","typedef":[{"name":"epwBeginUpgrade","type":"pair","args":[{"key":"current","value":"nat"},{"key":"new","value":"nat"}]}]},{"name":"epwApplyMigration","typedef":[{"name":"epwApplyMigration","type":"lambda($lambda0_input)"},{"name":"lambda0_input","type":"big_map bytes bytes"}]},{"name":"epwSetCode","typedef":[{"name":"epwSetCode","type":"lambda($lambda0_input)"},{"name":"lambda0_input","type":"pair (pair string bytes) (big_map bytes bytes)"}]},{"name":"epwFinishUpgrade","typedef":[{"name":"epwFinishUpgrade","type":"unit"}]},{"name":"transfer","typedef":[{"name":"transfer","type":"pair","args":[{"key":"from","value":"address"},{"key":"to","value":"address"},{"key":"value","value":"nat"}]}]},{"name":"approve","typedef":[{"name":"approve","type":"pair","args":[{"key":"spender","value":"address"},{"key":"value","value":"nat"}]}]},{"name":"mint","typedef":[{"name":"mint","type":"pair","args":[{"key":"to","value":"address"},{"key":"value","value":"nat"}]}]},{"name":"burn","typedef":[{"name":"burn","type":"nat"}]},{"name":"addOperator","typedef":[{"name":"addOperator","type":"address"}]},{"name":"removeOperator","typedef":[{"name":"removeOperator","type":"address"}]},{"name":"setRedeemAddress","typedef":[{"name":"setRedeemAddress","type":"address"}]},{"name":"pause","typedef":[{"name":"pause","type":"unit"}]},{"name":"unpause","typedef":[{"name":"unpause","type":"unit"}]},{"name":"transferOwnership","typedef":[{"name":"transferOwnership","type":"address"}]},{"name":"acceptOwnership","typedef":[{"name":"acceptOwnership","type":"unit"}]}]`,
		},
		{
			name: "mainnet/KT1U1JZaXoG4u1EPnhHL4R4otzkWc1L34q3c/Equisafe-KYC-registrar",
			metadata: Metadata{
				"0":                 &NodeMetadata{Prim: "or", Args: []string{"0/0/0", "0/0/1", "0/1/0", "0/1/1"}, Type: "namedunion"},
				"0/0":               &NodeMetadata{Prim: "or", Type: "or"},
				"0/0/0":             &NodeMetadata{FieldName: "addMembers", Prim: "list", Type: "list", Name: "addMembers"},
				"0/0/0/l":           &NodeMetadata{Prim: "pair", Args: []string{"0/0/0/l/0", "0/0/0/l/1"}, Type: "namedtuple"},
				"0/0/0/l/0":         &NodeMetadata{FieldName: "0", Prim: "address", Type: "address", Name: "0"},
				"0/0/0/l/1":         &NodeMetadata{FieldName: "1", Prim: "pair", Args: []string{"0/0/0/l/1/0/0/0", "0/0/0/l/1/0/0/1", "0/0/0/l/1/0/1/0", "0/0/0/l/1/0/1/1", "0/0/0/l/1/1"}, Type: "namedtuple", Name: "1"},
				"0/0/0/l/1/0":       &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/0/l/1/0/0":     &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/0/l/1/0/0/0":   &NodeMetadata{FieldName: "country", Prim: "nat", Type: "nat", Name: "country"},
				"0/0/0/l/1/0/0/1":   &NodeMetadata{FieldName: "expires", Prim: "timestamp", Type: "timestamp", Name: "expires"},
				"0/0/0/l/1/0/1":     &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/0/l/1/0/1/0":   &NodeMetadata{FieldName: "rating", Prim: "nat", Type: "nat", Name: "rating"},
				"0/0/0/l/1/0/1/1":   &NodeMetadata{FieldName: "region", Prim: "nat", Type: "nat", Name: "region"},
				"0/0/0/l/1/1":       &NodeMetadata{FieldName: "restricted", Prim: "bool", Type: "bool", Name: "restricted"},
				"0/0/1":             &NodeMetadata{FieldName: "checkMember", Prim: "pair", Args: []string{"0/0/1/0/0", "0/0/1/0/1", "0/0/1/1"}, Type: "namedtuple", Name: "checkMember"},
				"0/0/1/0":           &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/1/0/0":         &NodeMetadata{FieldName: "0", Prim: "address", Type: "address", Name: "0"},
				"0/0/1/0/1":         &NodeMetadata{FieldName: "1", Prim: "map", Type: "map", Name: "1"},
				"0/0/1/0/1/k":       &NodeMetadata{Prim: "nat", Type: "nat"},
				"0/0/1/0/1/v":       &NodeMetadata{Prim: "pair", Args: []string{"0/0/1/0/1/v/0/0", "0/0/1/0/1/v/0/1", "0/0/1/0/1/v/1/0", "0/0/1/0/1/v/1/1"}, Type: "namedtuple"},
				"0/0/1/0/1/v/0":     &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/1/0/1/v/0/0":   &NodeMetadata{FieldName: "country_invest_limit", Prim: "nat", Type: "nat", Name: "country_invest_limit"},
				"0/0/1/0/1/v/0/1":   &NodeMetadata{FieldName: "min_rating", Prim: "nat", Type: "nat", Name: "min_rating"},
				"0/0/1/0/1/v/1":     &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/1/0/1/v/1/0":   &NodeMetadata{FieldName: "rating_restrictions", Prim: "map", Type: "map", Name: "rating_restrictions"},
				"0/0/1/0/1/v/1/0/k": &NodeMetadata{Prim: "nat", Type: "nat"},
				"0/0/1/0/1/v/1/0/v": &NodeMetadata{Prim: "nat", Type: "nat"},
				"0/0/1/0/1/v/1/1":   &NodeMetadata{FieldName: "vesting", Prim: "timestamp", Type: "timestamp", Name: "vesting"},
				"0/0/1/1":           &NodeMetadata{FieldName: "2", Prim: "bool", Type: "bool", Name: "2"},
				"0/1":               &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/0":             &NodeMetadata{FieldName: "getMember", Prim: "pair", Args: []string{"0/1/0/0", "0/1/0/1"}, Type: "namedtuple", Name: "getMember"},
				"0/1/0/0":           &NodeMetadata{FieldName: "0", Prim: "address", Type: "address", Name: "0"},
				"0/1/0/1":           &NodeMetadata{FieldName: "1", Prim: "lambda", Parameter: "{\"prim\":\"pair\",\"args\":[{\"prim\":\"pair\",\"args\":[{\"prim\":\"pair\",\"args\":[{\"prim\":\"nat\",\"annots\":[\"%country\"]},{\"prim\":\"timestamp\",\"annots\":[\"%expires\"]}]},{\"prim\":\"pair\",\"args\":[{\"prim\":\"nat\",\"annots\":[\"%rating\"]},{\"prim\":\"nat\",\"annots\":[\"%region\"]}]}]},{\"prim\":\"bool\",\"annots\":[\"%restricted\"]}]}", Type: "lambda", Name: "1"},
				"0/1/1":             &NodeMetadata{FieldName: "removeMembers", Prim: "list", Type: "list", Name: "removeMembers"},
				"0/1/1/l":           &NodeMetadata{Prim: "address", Type: "address"},
			},
			result: `[{"name":"addMembers","typedef":[{"name":"addMembers","type":"list($addMembers_item)"},{"name":"addMembers_item","type":"pair","args":[{"key":"0","value":"address"},{"key":"1","value":"$1"}]},{"name":"1","type":"pair","args":[{"key":"country","value":"nat"},{"key":"expires","value":"timestamp"},{"key":"rating","value":"nat"},{"key":"region","value":"nat"},{"key":"restricted","value":"bool"}]}]},{"name":"checkMember","typedef":[{"name":"checkMember","type":"pair","args":[{"key":"0","value":"address"},{"key":"1","value":"$1"},{"key":"2","value":"bool"}]},{"name":"1","type":"map","args":[{"key":"key","value":"nat"},{"key":"value","value":"$1_value"}]},{"name":"1_value","type":"pair","args":[{"key":"country_invest_limit","value":"nat"},{"key":"min_rating","value":"nat"},{"key":"rating_restrictions","value":"map(nat, nat)"},{"key":"vesting","value":"timestamp"}]}]},{"name":"getMember","typedef":[{"name":"getMember","type":"pair","args":[{"key":"0","value":"address"},{"key":"1","value":"lambda($lambda0_input)"}]},{"name":"lambda0_input","type":"pair (pair (pair (nat %country) (timestamp %expires)) (pair (nat %rating) (nat %region))) (bool %restricted)"}]},{"name":"removeMembers","typedef":[{"name":"removeMembers","type":"list(address)"}]}]`,
		},
		{
			name: "mainnet/KT1ChNsEFxwyCbJyWGSL3KdjeXE28AY1Kaog/BakersRegistry",
			metadata: Metadata{
				"0":                     &NodeMetadata{Prim: "or", Args: []string{"0/0", "0/1/0", "0/1/1"}, Type: "namedunion"},
				"0/0":                   &NodeMetadata{FieldName: "set_data", Prim: "pair", Args: []string{"0/0/0", "0/0/1/0/o", "0/0/1/1/o"}, Type: "namedtuple", Name: "set_data"},
				"0/0/0":                 &NodeMetadata{FieldName: "delegate", Prim: "key_hash", Type: "key_hash", Name: "delegate"},
				"0/0/1":                 &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/1/0":               &NodeMetadata{FieldName: "data", Prim: "option", Type: "option"},
				"0/0/1/0/o":             &NodeMetadata{Prim: "pair", Args: []string{"0/0/1/0/o/0/0/0", "0/0/1/0/o/0/0/1", "0/0/1/0/o/0/1", "0/0/1/0/o/1/0/0", "0/0/1/0/o/1/0/1", "0/0/1/0/o/1/1/0/0/0", "0/0/1/0/o/1/1/0/0/1", "0/0/1/0/o/1/1/0/1/0", "0/0/1/0/o/1/1/0/1/1/0", "0/0/1/0/o/1/1/0/1/1/1", "0/0/1/0/o/1/1/1/0/0", "0/0/1/0/o/1/1/1/0/1", "0/0/1/0/o/1/1/1/1/0", "0/0/1/0/o/1/1/1/1/1"}, Type: "namedtuple", Name: "data"},
				"0/0/1/0/o/0":           &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/1/0/o/0/0":         &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/1/0/o/0/0/0":       &NodeMetadata{FieldName: "bakerName", Prim: "bytes", Type: "bytes", Name: "bakerName"},
				"0/0/1/0/o/0/0/1":       &NodeMetadata{FieldName: "openForDelegation", Prim: "bool", Type: "bool", Name: "openForDelegation"},
				"0/0/1/0/o/0/1":         &NodeMetadata{FieldName: "bakerOffchainRegistryUrl", Prim: "bytes", Type: "bytes", Name: "bakerOffchainRegistryUrl"},
				"0/0/1/0/o/1":           &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/1/0/o/1/0":         &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/1/0/o/1/0/0":       &NodeMetadata{FieldName: "split", Prim: "nat", Type: "nat", Name: "split"},
				"0/0/1/0/o/1/0/1":       &NodeMetadata{FieldName: "bakerPaysFromAccounts", Prim: "list", Type: "list", Name: "bakerPaysFromAccounts"},
				"0/0/1/0/o/1/0/1/l":     &NodeMetadata{Prim: "address", Type: "address"},
				"0/0/1/0/o/1/1":         &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/1/0/o/1/1/0":       &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/1/0/o/1/1/0/0":     &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/1/0/o/1/1/0/0/0":   &NodeMetadata{FieldName: "minDelegation", Prim: "nat", Type: "nat", Name: "minDelegation"},
				"0/0/1/0/o/1/1/0/0/1":   &NodeMetadata{FieldName: "subtractPayoutsLessThanMin", Prim: "bool", Type: "bool", Name: "subtractPayoutsLessThanMin"},
				"0/0/1/0/o/1/1/0/1":     &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/1/0/o/1/1/0/1/0":   &NodeMetadata{FieldName: "payoutDelay", Prim: "int", Type: "int", Name: "payoutDelay"},
				"0/0/1/0/o/1/1/0/1/1":   &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/1/0/o/1/1/0/1/1/0": &NodeMetadata{FieldName: "payoutFrequency", Prim: "nat", Type: "nat", Name: "payoutFrequency"},
				"0/0/1/0/o/1/1/0/1/1/1": &NodeMetadata{FieldName: "minPayout", Prim: "int", Type: "int", Name: "minPayout"},
				"0/0/1/0/o/1/1/1":       &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/1/0/o/1/1/1/0":     &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/1/0/o/1/1/1/0/0":   &NodeMetadata{FieldName: "bakerChargesTransactionFee", Prim: "bool", Type: "bool", Name: "bakerChargesTransactionFee"},
				"0/0/1/0/o/1/1/1/0/1":   &NodeMetadata{FieldName: "paymentConfigMask", Prim: "nat", Type: "nat", Name: "paymentConfigMask"},
				"0/0/1/0/o/1/1/1/1":     &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/1/0/o/1/1/1/1/0":   &NodeMetadata{FieldName: "overDelegationThreshold", Prim: "nat", Type: "nat", Name: "overDelegationThreshold"},
				"0/0/1/0/o/1/1/1/1/1":   &NodeMetadata{FieldName: "subtractRewardsFromUninvitedDelegation", Prim: "bool", Type: "bool", Name: "subtractRewardsFromUninvitedDelegation"},
				"0/0/1/1":               &NodeMetadata{FieldName: "reporterAccount", Prim: "option", Type: "option"},
				"0/0/1/1/o":             &NodeMetadata{Prim: "address", Type: "address", Name: "reporterAccount"},
				"0/1":                   &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/0":                 &NodeMetadata{FieldName: "set_fees", Prim: "pair", Args: []string{"0/1/0/0", "0/1/0/1"}, Type: "namedtuple", Name: "set_fees"},
				"0/1/0/0":               &NodeMetadata{FieldName: "signup_fee", Prim: "mutez", Type: "mutez", Name: "signup_fee"},
				"0/1/0/1":               &NodeMetadata{FieldName: "update_fee", Prim: "mutez", Type: "mutez", Name: "update_fee"},
				"0/1/1":                 &NodeMetadata{FieldName: "withdraw", Prim: "contract", Parameter: "{\"prim\":\"unit\"}", Type: "contract", Name: "withdraw"},
			},
			result: `[{"name":"set_data","typedef":[{"name":"set_data","type":"pair","args":[{"key":"delegate","value":"key_hash"},{"key":"data","value":"option($data)"},{"key":"reporterAccount","value":"option(address)"}]},{"name":"data","type":"pair","args":[{"key":"bakerName","value":"bytes"},{"key":"openForDelegation","value":"bool"},{"key":"bakerOffchainRegistryUrl","value":"bytes"},{"key":"split","value":"nat"},{"key":"bakerPaysFromAccounts","value":"list(address)"},{"key":"minDelegation","value":"nat"},{"key":"subtractPayoutsLessThanMin","value":"bool"},{"key":"payoutDelay","value":"int"},{"key":"payoutFrequency","value":"nat"},{"key":"minPayout","value":"int"},{"key":"bakerChargesTransactionFee","value":"bool"},{"key":"paymentConfigMask","value":"nat"},{"key":"overDelegationThreshold","value":"nat"},{"key":"subtractRewardsFromUninvitedDelegation","value":"bool"}]}]},{"name":"set_fees","typedef":[{"name":"set_fees","type":"pair","args":[{"key":"signup_fee","value":"mutez"},{"key":"update_fee","value":"mutez"}]}]},{"name":"withdraw","typedef":[{"name":"withdraw","type":"contract(unit)"}]}]`,
		},
		{
			name: "carthagenet/KT1S1YSgff244zEPbuoyY2CPQbVm12pxg2em/entrypoint_#",
			metadata: Metadata{
				"0":           &NodeMetadata{Prim: "or", Args: []string{"0/0/0/0", "0/0/0/1", "0/0/1/0", "0/0/1/1", "0/1/0/0", "0/1/0/1", "0/1/1/0", "0/1/1/1"}, Type: "union"},
				"0/0":         &NodeMetadata{Prim: "or", Type: "or"},
				"0/0/0":       &NodeMetadata{Prim: "or", Type: "or"},
				"0/0/0/0":     &NodeMetadata{Prim: "pair", Args: []string{"0/0/0/0/0", "0/0/0/0/1"}, Type: "tuple"},
				"0/0/0/0/0":   &NodeMetadata{Prim: "string", Type: "string"},
				"0/0/0/0/1":   &NodeMetadata{Prim: "bytes", Type: "bytes"},
				"0/0/0/1":     &NodeMetadata{Prim: "pair", Args: []string{"0/0/0/1/0", "0/0/0/1/1/0", "0/0/0/1/1/1"}, Type: "tuple"},
				"0/0/0/1/0":   &NodeMetadata{Prim: "nat", Type: "nat"},
				"0/0/0/1/1":   &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/0/1/1/0": &NodeMetadata{Prim: "lambda", Parameter: "{\"prim\":\"big_map\",\"args\":[{\"prim\":\"bytes\"},{\"prim\":\"bytes\"}]}", Type: "lambda"},
				"0/0/0/1/1/1": &NodeMetadata{Prim: "lambda", Parameter: "{\"prim\":\"pair\",\"args\":[{\"prim\":\"pair\",\"args\":[{\"prim\":\"string\"},{\"prim\":\"bytes\"}]},{\"prim\":\"big_map\",\"args\":[{\"prim\":\"bytes\"},{\"prim\":\"bytes\"}]}]}", Type: "lambda"},
				"0/0/1":       &NodeMetadata{Prim: "or", Type: "or"},
				"0/0/1/0":     &NodeMetadata{Prim: "pair", Args: []string{"0/0/1/0/0", "0/0/1/0/1"}, Type: "tuple"},
				"0/0/1/0/0":   &NodeMetadata{Prim: "unit", Type: "unit"},
				"0/0/1/0/1":   &NodeMetadata{Prim: "contract", Parameter: "{\"prim\":\"nat\"}", Type: "contract"},
				"0/0/1/1":     &NodeMetadata{Prim: "address", Type: "address"},
				"0/1":         &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/0":       &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/0/0":     &NodeMetadata{Prim: "nat", Type: "nat"},
				"0/1/0/1":     &NodeMetadata{Prim: "lambda", Parameter: "{\"prim\":\"big_map\",\"args\":[{\"prim\":\"bytes\"},{\"prim\":\"bytes\"}]}", Type: "lambda"},
				"0/1/1":       &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/1/0":     &NodeMetadata{Prim: "lambda", Parameter: "{\"prim\":\"pair\",\"args\":[{\"prim\":\"pair\",\"args\":[{\"prim\":\"string\"},{\"prim\":\"bytes\"}]},{\"prim\":\"big_map\",\"args\":[{\"prim\":\"bytes\"},{\"prim\":\"bytes\"}]}]}", Type: "lambda"},
				"0/1/1/1":     &NodeMetadata{Prim: "unit", Type: "unit"},
			},
			result: `[{"name":"entrypoint_0","typedef":[{"name":"entrypoint_0","type":"pair(string, bytes)"}]},{"name":"entrypoint_1","typedef":[{"name":"entrypoint_1","type":"pair","args":[{"value":"nat"},{"value":"lambda($lambda0_input)"},{"value":"lambda($lambda1_input)"}]},{"name":"lambda0_input","type":"big_map bytes bytes"},{"name":"lambda1_input","type":"pair (pair string bytes) (big_map bytes bytes)"}]},{"name":"entrypoint_2","typedef":[{"name":"entrypoint_2","type":"pair","args":[{"value":"unit"},{"value":"contract(nat)"}]}]},{"name":"entrypoint_3","typedef":[{"name":"entrypoint_3","type":"address"}]},{"name":"entrypoint_4","typedef":[{"name":"entrypoint_4","type":"nat"}]},{"name":"entrypoint_5","typedef":[{"name":"entrypoint_5","type":"lambda($lambda0_input)"},{"name":"lambda0_input","type":"big_map bytes bytes"}]},{"name":"entrypoint_6","typedef":[{"name":"entrypoint_6","type":"lambda($lambda0_input)"},{"name":"lambda0_input","type":"pair (pair string bytes) (big_map bytes bytes)"}]},{"name":"entrypoint_7","typedef":[{"name":"entrypoint_7","type":"unit"}]}]`,
		},
		{
			name: "carthagenet/KT19jHRkd5d7ugUGYg78RsNxfzG5DXJJwBmC/m-kus/map",
			metadata: Metadata{
				"0":       &NodeMetadata{FieldName: "account", Prim: "pair", Args: []string{"0/0", "0/1"}, Type: "namedtuple"},
				"0/0":     &NodeMetadata{FieldName: "settings", Prim: "map", Type: "map", Name: "settings"},
				"0/0/k":   &NodeMetadata{Prim: "string", Type: "string"},
				"0/0/v":   &NodeMetadata{TypeName: "value", Prim: "or", Args: []string{"0/0/v/0", "0/0/v/1"}, Type: "union"},
				"0/0/v/0": &NodeMetadata{Prim: "string", Type: "string"},
				"0/0/v/1": &NodeMetadata{Prim: "int", Type: "int"},
				"0/1":     &NodeMetadata{FieldName: "id", Prim: "nat", Type: "nat", Name: "id"},
			},
			result: `[{"name":"default","typedef":[{"name":"default","type":"pair","args":[{"key":"settings","value":"$settings"},{"key":"id","value":"nat"}]},{"name":"settings","type":"map","args":[{"key":"key","value":"string"},{"key":"value","value":"or(string, int)"}]}]}]`,
		},
		{
			name: "carthagenet/KT1Dz3cPcz51kTA3tyjwNzkBWo8k7TG5UxMK/m-kus/args#",
			metadata: Metadata{
				"0":           &NodeMetadata{Prim: "pair", Args: []string{"0/0", "0/1/0", "0/1/1"}, Type: "tuple"},
				"0/0":         &NodeMetadata{Prim: "nat", Type: "nat"},
				"0/1":         &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/1/0":       &NodeMetadata{Prim: "string", Type: "string"},
				"0/1/1":       &NodeMetadata{Prim: "big_map", Type: "big_map"},
				"0/1/1/k":     &NodeMetadata{Prim: "address", Type: "address"},
				"0/1/1/v":     &NodeMetadata{Prim: "pair", Args: []string{"0/1/1/v/0", "0/1/1/v/1"}, Type: "tuple"},
				"0/1/1/v/0":   &NodeMetadata{Prim: "nat", Type: "nat"},
				"0/1/1/v/1":   &NodeMetadata{Prim: "map", Type: "map"},
				"0/1/1/v/1/k": &NodeMetadata{Prim: "address", Type: "address"},
				"0/1/1/v/1/v": &NodeMetadata{Prim: "nat", Type: "nat"},
			},
			result: `[{"name":"default","typedef":[{"name":"default","type":"pair","args":[{"value":"nat"},{"value":"string"},{"value":"$pair0_arg2"}]},{"name":"pair0_arg2","type":"big_map","args":[{"key":"key","value":"address"},{"key":"value","value":"$big_map1_value"}]},{"name":"big_map1_value","type":"pair","args":[{"value":"nat"},{"value":"map(address, nat)"}]}]}]`,
		},
		{
			name: "carthagenet/KT1PpNh5jGx5DhPkpvVo374B6Bbk3H3aZAtu/eurotz",
			metadata: Metadata{
				"0":                 &NodeMetadata{Prim: "or", Args: []string{"0/0/0/0/0", "0/0/0/0/1", "0/0/0/1/0", "0/0/0/1/1", "0/0/1/0/0", "0/0/1/0/1", "0/0/1/1/0", "0/0/1/1/1/0", "0/0/1/1/1/1", "0/1/0/0/0", "0/1/0/0/1", "0/1/0/1/0", "0/1/0/1/1/0", "0/1/0/1/1/1", "0/1/1/0/0", "0/1/1/0/1", "0/1/1/1/0", "0/1/1/1/1/0", "0/1/1/1/1/1"}, Type: "namedunion"},
				"0/0":               &NodeMetadata{Prim: "or", Type: "or"},
				"0/0/0":             &NodeMetadata{Prim: "or", Type: "or"},
				"0/0/0/0":           &NodeMetadata{Prim: "or", Type: "or"},
				"0/0/0/0/0":         &NodeMetadata{FieldName: "addSuperTransferAgent", Prim: "address", Type: "address", Name: "addSuperTransferAgent"},
				"0/0/0/0/1":         &NodeMetadata{FieldName: "addTransferAgent", Prim: "address", Type: "address", Name: "addTransferAgent"},
				"0/0/0/1":           &NodeMetadata{Prim: "or", Type: "or"},
				"0/0/0/1/0":         &NodeMetadata{FieldName: "approve", Prim: "pair", Args: []string{"0/0/0/1/0/0", "0/0/0/1/0/1/0", "0/0/0/1/0/1/1"}, Type: "namedtuple", Name: "approve"},
				"0/0/0/1/0/0":       &NodeMetadata{FieldName: "amount", Prim: "int", Type: "int", Name: "amount"},
				"0/0/0/1/0/1":       &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/0/1/0/1/0":     &NodeMetadata{FieldName: "f", Prim: "address", Type: "address", Name: "f"},
				"0/0/0/1/0/1/1":     &NodeMetadata{FieldName: "t", Prim: "address", Type: "address", Name: "t"},
				"0/0/0/1/1":         &NodeMetadata{FieldName: "approveFeeless", Prim: "pair", Args: []string{"0/0/0/1/1/0/0", "0/0/0/1/1/0/1/0", "0/0/0/1/1/0/1/1", "0/0/0/1/1/1/0/0", "0/0/0/1/1/1/0/1", "0/0/0/1/1/1/1/0", "0/0/0/1/1/1/1/1"}, Type: "namedtuple", Name: "approveFeeless"},
				"0/0/0/1/1/0":       &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/0/1/1/0/0":     &NodeMetadata{FieldName: "amount", Prim: "int", Type: "int", Name: "amount"},
				"0/0/0/1/1/0/1":     &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/0/1/1/0/1/0":   &NodeMetadata{FieldName: "b", Prim: "bytes", Type: "bytes", Name: "b"},
				"0/0/0/1/1/0/1/1":   &NodeMetadata{FieldName: "f", Prim: "address", Type: "address", Name: "f"},
				"0/0/0/1/1/1":       &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/0/1/1/1/0":     &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/0/1/1/1/0/0":   &NodeMetadata{FieldName: "k", Prim: "key", Type: "key", Name: "k"},
				"0/0/0/1/1/1/0/1":   &NodeMetadata{FieldName: "nonce", Prim: "nat", Type: "nat", Name: "nonce"},
				"0/0/0/1/1/1/1":     &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/0/1/1/1/1/0":   &NodeMetadata{FieldName: "s", Prim: "signature", Type: "signature", Name: "s"},
				"0/0/0/1/1/1/1/1":   &NodeMetadata{FieldName: "t", Prim: "address", Type: "address", Name: "t"},
				"0/0/1":             &NodeMetadata{Prim: "or", Type: "or"},
				"0/0/1/0":           &NodeMetadata{Prim: "or", Type: "or"},
				"0/0/1/0/0":         &NodeMetadata{FieldName: "burn", Prim: "pair", Args: []string{"0/0/1/0/0/0", "0/0/1/0/0/1"}, Type: "namedtuple", Name: "burn"},
				"0/0/1/0/0/0":       &NodeMetadata{FieldName: "address", Prim: "address", Type: "address", Name: "address"},
				"0/0/1/0/0/1":       &NodeMetadata{FieldName: "amount", Prim: "int", Type: "int", Name: "amount"},
				"0/0/1/0/1":         &NodeMetadata{FieldName: "changeEventSinkContractAddress", Prim: "address", Type: "address", Name: "changeEventSinkContractAddress"},
				"0/0/1/1":           &NodeMetadata{Prim: "or", Type: "or"},
				"0/0/1/1/0":         &NodeMetadata{FieldName: "decreaseAllowance", Prim: "pair", Args: []string{"0/0/1/1/0/0", "0/0/1/1/0/1/0", "0/0/1/1/0/1/1"}, Type: "namedtuple", Name: "decreaseAllowance"},
				"0/0/1/1/0/0":       &NodeMetadata{FieldName: "amount", Prim: "int", Type: "int", Name: "amount"},
				"0/0/1/1/0/1":       &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/1/1/0/1/0":     &NodeMetadata{FieldName: "f", Prim: "address", Type: "address", Name: "f"},
				"0/0/1/1/0/1/1":     &NodeMetadata{FieldName: "t", Prim: "address", Type: "address", Name: "t"},
				"0/0/1/1/1":         &NodeMetadata{Prim: "or", Type: "or"},
				"0/0/1/1/1/0":       &NodeMetadata{FieldName: "decreaseAllowanceFeeless", Prim: "pair", Args: []string{"0/0/1/1/1/0/0/0", "0/0/1/1/1/0/0/1/0", "0/0/1/1/1/0/0/1/1", "0/0/1/1/1/0/1/0/0", "0/0/1/1/1/0/1/0/1", "0/0/1/1/1/0/1/1/0", "0/0/1/1/1/0/1/1/1"}, Type: "namedtuple", Name: "decreaseAllowanceFeeless"},
				"0/0/1/1/1/0/0":     &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/1/1/1/0/0/0":   &NodeMetadata{FieldName: "amount", Prim: "int", Type: "int", Name: "amount"},
				"0/0/1/1/1/0/0/1":   &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/1/1/1/0/0/1/0": &NodeMetadata{FieldName: "b", Prim: "bytes", Type: "bytes", Name: "b"},
				"0/0/1/1/1/0/0/1/1": &NodeMetadata{FieldName: "f", Prim: "address", Type: "address", Name: "f"},
				"0/0/1/1/1/0/1":     &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/1/1/1/0/1/0":   &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/1/1/1/0/1/0/0": &NodeMetadata{FieldName: "k", Prim: "key", Type: "key", Name: "k"},
				"0/0/1/1/1/0/1/0/1": &NodeMetadata{FieldName: "nonce", Prim: "nat", Type: "nat", Name: "nonce"},
				"0/0/1/1/1/0/1/1":   &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/0/1/1/1/0/1/1/0": &NodeMetadata{FieldName: "s", Prim: "signature", Type: "signature", Name: "s"},
				"0/0/1/1/1/0/1/1/1": &NodeMetadata{FieldName: "t", Prim: "address", Type: "address", Name: "t"},
				"0/0/1/1/1/1":       &NodeMetadata{FieldName: "deleteSuperTransferAgent", Prim: "address", Type: "address", Name: "deleteSuperTransferAgent"},
				"0/1":               &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/0":             &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/0/0":           &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/0/0/0":         &NodeMetadata{FieldName: "deleteTransferAgent", Prim: "address", Type: "address", Name: "deleteTransferAgent"},
				"0/1/0/0/1":         &NodeMetadata{FieldName: "increaseAllowance", Prim: "pair", Args: []string{"0/1/0/0/1/0", "0/1/0/0/1/1/0", "0/1/0/0/1/1/1"}, Type: "namedtuple", Name: "increaseAllowance"},
				"0/1/0/0/1/0":       &NodeMetadata{FieldName: "amount", Prim: "int", Type: "int", Name: "amount"},
				"0/1/0/0/1/1":       &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/1/0/0/1/1/0":     &NodeMetadata{FieldName: "f", Prim: "address", Type: "address", Name: "f"},
				"0/1/0/0/1/1/1":     &NodeMetadata{FieldName: "t", Prim: "address", Type: "address", Name: "t"},
				"0/1/0/1":           &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/0/1/0":         &NodeMetadata{FieldName: "increaseAllowanceFeeless", Prim: "pair", Args: []string{"0/1/0/1/0/0/0", "0/1/0/1/0/0/1/0", "0/1/0/1/0/0/1/1", "0/1/0/1/0/1/0/0", "0/1/0/1/0/1/0/1", "0/1/0/1/0/1/1/0", "0/1/0/1/0/1/1/1"}, Type: "namedtuple", Name: "increaseAllowanceFeeless"},
				"0/1/0/1/0/0":       &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/1/0/1/0/0/0":     &NodeMetadata{FieldName: "amount", Prim: "int", Type: "int", Name: "amount"},
				"0/1/0/1/0/0/1":     &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/1/0/1/0/0/1/0":   &NodeMetadata{FieldName: "b", Prim: "bytes", Type: "bytes", Name: "b"},
				"0/1/0/1/0/0/1/1":   &NodeMetadata{FieldName: "f", Prim: "address", Type: "address", Name: "f"},
				"0/1/0/1/0/1":       &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/1/0/1/0/1/0":     &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/1/0/1/0/1/0/0":   &NodeMetadata{FieldName: "k", Prim: "key", Type: "key", Name: "k"},
				"0/1/0/1/0/1/0/1":   &NodeMetadata{FieldName: "nonce", Prim: "nat", Type: "nat", Name: "nonce"},
				"0/1/0/1/0/1/1":     &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/1/0/1/0/1/1/0":   &NodeMetadata{FieldName: "s", Prim: "signature", Type: "signature", Name: "s"},
				"0/1/0/1/0/1/1/1":   &NodeMetadata{FieldName: "t", Prim: "address", Type: "address", Name: "t"},
				"0/1/0/1/1":         &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/0/1/1/0":       &NodeMetadata{FieldName: "mint", Prim: "pair", Args: []string{"0/1/0/1/1/0/0", "0/1/0/1/1/0/1"}, Type: "namedtuple", Name: "mint"},
				"0/1/0/1/1/0/0":     &NodeMetadata{FieldName: "address", Prim: "address", Type: "address", Name: "address"},
				"0/1/0/1/1/0/1":     &NodeMetadata{FieldName: "amount", Prim: "int", Type: "int", Name: "amount"},
				"0/1/0/1/1/1":       &NodeMetadata{FieldName: "resetAllAllowances", Prim: "address", Type: "address", Name: "resetAllAllowances"},
				"0/1/1":             &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/1/0":           &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/1/0/0":         &NodeMetadata{FieldName: "resetAllowance", Prim: "pair", Args: []string{"0/1/1/0/0/0", "0/1/1/0/0/1"}, Type: "namedtuple", Name: "resetAllowance"},
				"0/1/1/0/0/0":       &NodeMetadata{FieldName: "address", Prim: "address", Type: "address", Name: "address"},
				"0/1/1/0/0/1":       &NodeMetadata{FieldName: "f", Prim: "address", Type: "address", Name: "f"},
				"0/1/1/0/1":         &NodeMetadata{FieldName: "setAdministrator", Prim: "address", Type: "address", Name: "setAdministrator"},
				"0/1/1/1":           &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/1/1/0":         &NodeMetadata{FieldName: "setPause", Prim: "bool", Type: "bool", Name: "setPause"},
				"0/1/1/1/1":         &NodeMetadata{Prim: "or", Type: "or"},
				"0/1/1/1/1/0":       &NodeMetadata{FieldName: "transfer", Prim: "pair", Args: []string{"0/1/1/1/1/0/0", "0/1/1/1/1/0/1/0", "0/1/1/1/1/0/1/1"}, Type: "namedtuple", Name: "transfer"},
				"0/1/1/1/1/0/0":     &NodeMetadata{FieldName: "amount", Prim: "int", Type: "int", Name: "amount"},
				"0/1/1/1/1/0/1":     &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/1/1/1/1/0/1/0":   &NodeMetadata{FieldName: "f", Prim: "address", Type: "address", Name: "f"},
				"0/1/1/1/1/0/1/1":   &NodeMetadata{FieldName: "t", Prim: "address", Type: "address", Name: "t"},
				"0/1/1/1/1/1":       &NodeMetadata{FieldName: "transferFeeless", Prim: "pair", Args: []string{"0/1/1/1/1/1/0/0", "0/1/1/1/1/1/0/1/0", "0/1/1/1/1/1/0/1/1", "0/1/1/1/1/1/1/0/0", "0/1/1/1/1/1/1/0/1", "0/1/1/1/1/1/1/1/0", "0/1/1/1/1/1/1/1/1"}, Type: "namedtuple", Name: "transferFeeless"},
				"0/1/1/1/1/1/0":     &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/1/1/1/1/1/0/0":   &NodeMetadata{FieldName: "amount", Prim: "int", Type: "int", Name: "amount"},
				"0/1/1/1/1/1/0/1":   &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/1/1/1/1/1/0/1/0": &NodeMetadata{FieldName: "b", Prim: "bytes", Type: "bytes", Name: "b"},
				"0/1/1/1/1/1/0/1/1": &NodeMetadata{FieldName: "f", Prim: "address", Type: "address", Name: "f"},
				"0/1/1/1/1/1/1":     &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/1/1/1/1/1/1/0":   &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/1/1/1/1/1/1/0/0": &NodeMetadata{FieldName: "k", Prim: "key", Type: "key", Name: "k"},
				"0/1/1/1/1/1/1/0/1": &NodeMetadata{FieldName: "nonce", Prim: "nat", Type: "nat", Name: "nonce"},
				"0/1/1/1/1/1/1/1":   &NodeMetadata{Prim: "pair", Type: "pair"},
				"0/1/1/1/1/1/1/1/0": &NodeMetadata{FieldName: "s", Prim: "signature", Type: "signature", Name: "s"},
				"0/1/1/1/1/1/1/1/1": &NodeMetadata{FieldName: "t", Prim: "address", Type: "address", Name: "t"},
			},
			result: `[{"name":"addSuperTransferAgent","typedef":[{"name":"addSuperTransferAgent","type":"address"}]},{"name":"addTransferAgent","typedef":[{"name":"addTransferAgent","type":"address"}]},{"name":"approve","typedef":[{"name":"approve","type":"pair","args":[{"key":"amount","value":"int"},{"key":"f","value":"address"},{"key":"t","value":"address"}]}]},{"name":"approveFeeless","typedef":[{"name":"approveFeeless","type":"pair","args":[{"key":"amount","value":"int"},{"key":"b","value":"bytes"},{"key":"f","value":"address"},{"key":"k","value":"key"},{"key":"nonce","value":"nat"},{"key":"s","value":"signature"},{"key":"t","value":"address"}]}]},{"name":"burn","typedef":[{"name":"burn","type":"pair","args":[{"key":"address","value":"address"},{"key":"amount","value":"int"}]}]},{"name":"changeEventSinkContractAddress","typedef":[{"name":"changeEventSinkContractAddress","type":"address"}]},{"name":"decreaseAllowance","typedef":[{"name":"decreaseAllowance","type":"pair","args":[{"key":"amount","value":"int"},{"key":"f","value":"address"},{"key":"t","value":"address"}]}]},{"name":"decreaseAllowanceFeeless","typedef":[{"name":"decreaseAllowanceFeeless","type":"pair","args":[{"key":"amount","value":"int"},{"key":"b","value":"bytes"},{"key":"f","value":"address"},{"key":"k","value":"key"},{"key":"nonce","value":"nat"},{"key":"s","value":"signature"},{"key":"t","value":"address"}]}]},{"name":"deleteSuperTransferAgent","typedef":[{"name":"deleteSuperTransferAgent","type":"address"}]},{"name":"deleteTransferAgent","typedef":[{"name":"deleteTransferAgent","type":"address"}]},{"name":"increaseAllowance","typedef":[{"name":"increaseAllowance","type":"pair","args":[{"key":"amount","value":"int"},{"key":"f","value":"address"},{"key":"t","value":"address"}]}]},{"name":"increaseAllowanceFeeless","typedef":[{"name":"increaseAllowanceFeeless","type":"pair","args":[{"key":"amount","value":"int"},{"key":"b","value":"bytes"},{"key":"f","value":"address"},{"key":"k","value":"key"},{"key":"nonce","value":"nat"},{"key":"s","value":"signature"},{"key":"t","value":"address"}]}]},{"name":"mint","typedef":[{"name":"mint","type":"pair","args":[{"key":"address","value":"address"},{"key":"amount","value":"int"}]}]},{"name":"resetAllAllowances","typedef":[{"name":"resetAllAllowances","type":"address"}]},{"name":"resetAllowance","typedef":[{"name":"resetAllowance","type":"pair","args":[{"key":"address","value":"address"},{"key":"f","value":"address"}]}]},{"name":"setAdministrator","typedef":[{"name":"setAdministrator","type":"address"}]},{"name":"setPause","typedef":[{"name":"setPause","type":"bool"}]},{"name":"transfer","typedef":[{"name":"transfer","type":"pair","args":[{"key":"amount","value":"int"},{"key":"f","value":"address"},{"key":"t","value":"address"}]}]},{"name":"transferFeeless","typedef":[{"name":"transferFeeless","type":"pair","args":[{"key":"amount","value":"int"},{"key":"b","value":"bytes"},{"key":"f","value":"address"},{"key":"k","value":"key"},{"key":"nonce","value":"nat"},{"key":"s","value":"signature"},{"key":"t","value":"address"}]}]}]`,
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			entrypoints, err := tt.metadata.GetDocEntrypoints()
			if err != nil {
				t.Errorf("GetDocEntrypoints error: %v", err)
				return
			}

			json, err := json.Marshal(entrypoints)
			if err != nil {
				t.Errorf("json.Marshal error: %v", err)
				return
			}

			if string(json) != tt.result {
				t.Errorf("invalid json")
			}
		})
	}
}
